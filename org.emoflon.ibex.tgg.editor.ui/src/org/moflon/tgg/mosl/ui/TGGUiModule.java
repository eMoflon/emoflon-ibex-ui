/*
 * generated by Xtext
 */
package org.moflon.tgg.mosl.ui;



import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.ide.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ide.editor.syntaxcoloring.DefaultSemanticHighlightingCalculator;
import org.eclipse.xtext.resource.containers.IAllContainersState;
import org.eclipse.xtext.ui.editor.model.IResourceForEditorInputFactory;
import org.eclipse.xtext.ui.editor.model.ResourceForIEditorInputFactory;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.resource.IResourceSetProvider;
import org.eclipse.xtext.ui.resource.SimpleResourceSetProvider;
import org.moflon.tgg.mosl.ui.highlighting.MOSLHighlightingConfiguration;
import org.moflon.tgg.mosl.ui.highlighting.MOSLSemanticHighlightCalculator;
import org.moflon.tgg.mosl.ui.highlighting.MOSLTokenMapper;
import org.moflon.tgg.mosl.ui.highlighting.utils.MOSLHighlightProviderHelper;

import com.google.inject.Binder;
import com.google.inject.Provider;

/**
 * Use this class to register components to be used within the IDE.
 */
public class TGGUiModule extends org.moflon.tgg.mosl.ui.AbstractTGGUiModule {
	public TGGUiModule(AbstractUIPlugin plugin) {
		super(plugin);
		MOSLHighlightProviderHelper.init();
	}
	
	public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration()
	{
	   return MOSLHighlightingConfiguration.class;
	}
	
	@Override
	public void configure(Binder binder) {
		binder.bind(DefaultSemanticHighlightingCalculator.class).to(MOSLSemanticHighlightCalculator.class);
		binder.bind(AbstractAntlrTokenToAttributeIdMapper.class).to(MOSLTokenMapper.class);
		super.configure(binder);
		
	}
	
	@Override
	public Class<? extends IResourceSetProvider> bindIResourceSetProvider() {
	    return SimpleResourceSetProvider.class;
	}
	
	@Override
	public Class<? extends IResourceForEditorInputFactory>
	    bindIResourceForEditorInputFactory() {
	        return ResourceForIEditorInputFactory.class;
	}
	
	@Override
	public Provider<IAllContainersState> provideIAllContainersState() {
	  return org.eclipse.xtext.ui.shared.Access.getWorkspaceProjectsState();
	}
}
