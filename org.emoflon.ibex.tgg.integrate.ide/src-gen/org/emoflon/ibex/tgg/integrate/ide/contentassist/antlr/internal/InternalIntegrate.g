/*
 * generated by Xtext 2.28.0
 */
grammar InternalIntegrate;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.emoflon.ibex.tgg.integrate.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.emoflon.ibex.tgg.integrate.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.emoflon.ibex.tgg.integrate.services.IntegrateGrammarAccess;

}
@parser::members {
	private IntegrateGrammarAccess grammarAccess;

	public void setGrammarAccess(IntegrateGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleIntegrate
entryRuleIntegrate
:
{ before(grammarAccess.getIntegrateRule()); }
	 ruleIntegrate
{ after(grammarAccess.getIntegrateRule()); } 
	 EOF 
;

// Rule Integrate
ruleIntegrate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegrateAccess().getGroup()); }
		(rule__Integrate__Group__0)
		{ after(grammarAccess.getIntegrateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConflictResolutionSpecification
entryRuleConflictResolutionSpecification
:
{ before(grammarAccess.getConflictResolutionSpecificationRule()); }
	 ruleConflictResolutionSpecification
{ after(grammarAccess.getConflictResolutionSpecificationRule()); } 
	 EOF 
;

// Rule ConflictResolutionSpecification
ruleConflictResolutionSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConflictResolutionSpecificationAccess().getGroup()); }
		(rule__ConflictResolutionSpecification__Group__0)
		{ after(grammarAccess.getConflictResolutionSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableReference
entryRuleVariableReference
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getRefAssignment()); }
		(rule__VariableReference__RefAssignment)
		{ after(grammarAccess.getVariableReferenceAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipeline
entryRulePipeline
:
{ before(grammarAccess.getPipelineRule()); }
	 rulePipeline
{ after(grammarAccess.getPipelineRule()); } 
	 EOF 
;

// Rule Pipeline
rulePipeline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineAccess().getStartAssignment()); }
		(rule__Pipeline__StartAssignment)
		{ after(grammarAccess.getPipelineAccess().getStartAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageStart
entryRulePipelineStageStart
:
{ before(grammarAccess.getPipelineStageStartRule()); }
	 rulePipelineStageStart
{ after(grammarAccess.getPipelineStageStartRule()); } 
	 EOF 
;

// Rule PipelineStageStart
rulePipelineStageStart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageStartAccess().getAlternatives()); }
		(rule__PipelineStageStart__Alternatives)
		{ after(grammarAccess.getPipelineStageStartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageSrc
entryRulePipelineStageSrc
:
{ before(grammarAccess.getPipelineStageSrcRule()); }
	 rulePipelineStageSrc
{ after(grammarAccess.getPipelineStageSrcRule()); } 
	 EOF 
;

// Rule PipelineStageSrc
rulePipelineStageSrc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageSrcAccess().getGroup()); }
		(rule__PipelineStageSrc__Group__0)
		{ after(grammarAccess.getPipelineStageSrcAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageTrg
entryRulePipelineStageTrg
:
{ before(grammarAccess.getPipelineStageTrgRule()); }
	 rulePipelineStageTrg
{ after(grammarAccess.getPipelineStageTrgRule()); } 
	 EOF 
;

// Rule PipelineStageTrg
rulePipelineStageTrg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageTrgAccess().getGroup()); }
		(rule__PipelineStageTrg__Group__0)
		{ after(grammarAccess.getPipelineStageTrgAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageFilter
entryRulePipelineStageFilter
:
{ before(grammarAccess.getPipelineStageFilterRule()); }
	 rulePipelineStageFilter
{ after(grammarAccess.getPipelineStageFilterRule()); } 
	 EOF 
;

// Rule PipelineStageFilter
rulePipelineStageFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageFilterAccess().getAlternatives()); }
		(rule__PipelineStageFilter__Alternatives)
		{ after(grammarAccess.getPipelineStageFilterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageModification
entryRulePipelineStageModification
:
{ before(grammarAccess.getPipelineStageModificationRule()); }
	 rulePipelineStageModification
{ after(grammarAccess.getPipelineStageModificationRule()); } 
	 EOF 
;

// Rule PipelineStageModification
rulePipelineStageModification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageModificationAccess().getAlternatives()); }
		(rule__PipelineStageModification__Alternatives)
		{ after(grammarAccess.getPipelineStageModificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageCreated
entryRulePipelineStageCreated
:
{ before(grammarAccess.getPipelineStageCreatedRule()); }
	 rulePipelineStageCreated
{ after(grammarAccess.getPipelineStageCreatedRule()); } 
	 EOF 
;

// Rule PipelineStageCreated
rulePipelineStageCreated 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageCreatedAccess().getGroup()); }
		(rule__PipelineStageCreated__Group__0)
		{ after(grammarAccess.getPipelineStageCreatedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageDeleted
entryRulePipelineStageDeleted
:
{ before(grammarAccess.getPipelineStageDeletedRule()); }
	 rulePipelineStageDeleted
{ after(grammarAccess.getPipelineStageDeletedRule()); } 
	 EOF 
;

// Rule PipelineStageDeleted
rulePipelineStageDeleted 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageDeletedAccess().getGroup()); }
		(rule__PipelineStageDeleted__Group__0)
		{ after(grammarAccess.getPipelineStageDeletedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageType
entryRulePipelineStageType
:
{ before(grammarAccess.getPipelineStageTypeRule()); }
	 rulePipelineStageType
{ after(grammarAccess.getPipelineStageTypeRule()); } 
	 EOF 
;

// Rule PipelineStageType
rulePipelineStageType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageTypeAccess().getGroup()); }
		(rule__PipelineStageType__Group__0)
		{ after(grammarAccess.getPipelineStageTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageEnd
entryRulePipelineStageEnd
:
{ before(grammarAccess.getPipelineStageEndRule()); }
	 rulePipelineStageEnd
{ after(grammarAccess.getPipelineStageEndRule()); } 
	 EOF 
;

// Rule PipelineStageEnd
rulePipelineStageEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageEndAccess().getAlternatives()); }
		(rule__PipelineStageEnd__Alternatives)
		{ after(grammarAccess.getPipelineStageEndAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageCount
entryRulePipelineStageCount
:
{ before(grammarAccess.getPipelineStageCountRule()); }
	 rulePipelineStageCount
{ after(grammarAccess.getPipelineStageCountRule()); } 
	 EOF 
;

// Rule PipelineStageCount
rulePipelineStageCount 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageCountAccess().getNameAssignment()); }
		(rule__PipelineStageCount__NameAssignment)
		{ after(grammarAccess.getPipelineStageCountAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageExists
entryRulePipelineStageExists
:
{ before(grammarAccess.getPipelineStageExistsRule()); }
	 rulePipelineStageExists
{ after(grammarAccess.getPipelineStageExistsRule()); } 
	 EOF 
;

// Rule PipelineStageExists
rulePipelineStageExists 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageExistsAccess().getNameAssignment()); }
		(rule__PipelineStageExists__NameAssignment)
		{ after(grammarAccess.getPipelineStageExistsAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSatisfactionRule
entryRuleSatisfactionRule
:
{ before(grammarAccess.getSatisfactionRuleRule()); }
	 ruleSatisfactionRule
{ after(grammarAccess.getSatisfactionRuleRule()); } 
	 EOF 
;

// Rule SatisfactionRule
ruleSatisfactionRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSatisfactionRuleAccess().getExpressionAssignment()); }
		(rule__SatisfactionRule__ExpressionAssignment)
		{ after(grammarAccess.getSatisfactionRuleAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getGroup()); }
		(rule__BooleanExpression__Group__0)
		{ after(grammarAccess.getBooleanExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWrappedOrExpression
entryRuleWrappedOrExpression
:
{ before(grammarAccess.getWrappedOrExpressionRule()); }
	 ruleWrappedOrExpression
{ after(grammarAccess.getWrappedOrExpressionRule()); } 
	 EOF 
;

// Rule WrappedOrExpression
ruleWrappedOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWrappedOrExpressionAccess().getGroup()); }
		(rule__WrappedOrExpression__Group__0)
		{ after(grammarAccess.getWrappedOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup()); }
		(rule__ComparisonExpression__Group__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonParameter
entryRuleComparisonParameter
:
{ before(grammarAccess.getComparisonParameterRule()); }
	 ruleComparisonParameter
{ after(grammarAccess.getComparisonParameterRule()); } 
	 EOF 
;

// Rule ComparisonParameter
ruleComparisonParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonParameterAccess().getAlternatives()); }
		(rule__ComparisonParameter__Alternatives)
		{ after(grammarAccess.getComparisonParameterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralValueAccess().getValueAssignment()); }
		(rule__LiteralValue__ValueAssignment)
		{ after(grammarAccess.getLiteralValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResolution
entryRuleResolution
:
{ before(grammarAccess.getResolutionRule()); }
	 ruleResolution
{ after(grammarAccess.getResolutionRule()); } 
	 EOF 
;

// Rule Resolution
ruleResolution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResolutionAccess().getGroup()); }
		(rule__Resolution__Group__0)
		{ after(grammarAccess.getResolutionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResolutionStrategyWithOperationalDelta
entryRuleResolutionStrategyWithOperationalDelta
:
{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaRule()); }
	 ruleResolutionStrategyWithOperationalDelta
{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaRule()); } 
	 EOF 
;

// Rule ResolutionStrategyWithOperationalDelta
ruleResolutionStrategyWithOperationalDelta 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getGroup()); }
		(rule__ResolutionStrategyWithOperationalDelta__Group__0)
		{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResolutionStrategy
entryRuleResolutionStrategy
:
{ before(grammarAccess.getResolutionStrategyRule()); }
	 ruleResolutionStrategy
{ after(grammarAccess.getResolutionStrategyRule()); } 
	 EOF 
;

// Rule ResolutionStrategy
ruleResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getAlternatives()); }
		(rule__ResolutionStrategy__Alternatives)
		{ after(grammarAccess.getResolutionStrategyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFallbackResolutionStrategy
entryRuleFallbackResolutionStrategy
:
{ before(grammarAccess.getFallbackResolutionStrategyRule()); }
	 ruleFallbackResolutionStrategy
{ after(grammarAccess.getFallbackResolutionStrategyRule()); } 
	 EOF 
;

// Rule FallbackResolutionStrategy
ruleFallbackResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallbackResolutionStrategyAccess().getAlternatives()); }
		(rule__FallbackResolutionStrategy__Alternatives)
		{ after(grammarAccess.getFallbackResolutionStrategyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMergeAndPreserveResolutionStrategy
entryRuleMergeAndPreserveResolutionStrategy
:
{ before(grammarAccess.getMergeAndPreserveResolutionStrategyRule()); }
	 ruleMergeAndPreserveResolutionStrategy
{ after(grammarAccess.getMergeAndPreserveResolutionStrategyRule()); } 
	 EOF 
;

// Rule MergeAndPreserveResolutionStrategy
ruleMergeAndPreserveResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMergeAndPreserveResolutionStrategyAccess().getNameAssignment()); }
		(rule__MergeAndPreserveResolutionStrategy__NameAssignment)
		{ after(grammarAccess.getMergeAndPreserveResolutionStrategyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRevokeAdditionResolutionStrategy
entryRuleRevokeAdditionResolutionStrategy
:
{ before(grammarAccess.getRevokeAdditionResolutionStrategyRule()); }
	 ruleRevokeAdditionResolutionStrategy
{ after(grammarAccess.getRevokeAdditionResolutionStrategyRule()); } 
	 EOF 
;

// Rule RevokeAdditionResolutionStrategy
ruleRevokeAdditionResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRevokeAdditionResolutionStrategyAccess().getNameAssignment()); }
		(rule__RevokeAdditionResolutionStrategy__NameAssignment)
		{ after(grammarAccess.getRevokeAdditionResolutionStrategyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRevokeDeletionResolutionStrategy
entryRuleRevokeDeletionResolutionStrategy
:
{ before(grammarAccess.getRevokeDeletionResolutionStrategyRule()); }
	 ruleRevokeDeletionResolutionStrategy
{ after(grammarAccess.getRevokeDeletionResolutionStrategyRule()); } 
	 EOF 
;

// Rule RevokeDeletionResolutionStrategy
ruleRevokeDeletionResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRevokeDeletionResolutionStrategyAccess().getNameAssignment()); }
		(rule__RevokeDeletionResolutionStrategy__NameAssignment)
		{ after(grammarAccess.getRevokeDeletionResolutionStrategyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreferSourceResolutionStrategy
entryRulePreferSourceResolutionStrategy
:
{ before(grammarAccess.getPreferSourceResolutionStrategyRule()); }
	 rulePreferSourceResolutionStrategy
{ after(grammarAccess.getPreferSourceResolutionStrategyRule()); } 
	 EOF 
;

// Rule PreferSourceResolutionStrategy
rulePreferSourceResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreferSourceResolutionStrategyAccess().getNameAssignment()); }
		(rule__PreferSourceResolutionStrategy__NameAssignment)
		{ after(grammarAccess.getPreferSourceResolutionStrategyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreferTargetResolutionStrategy
entryRulePreferTargetResolutionStrategy
:
{ before(grammarAccess.getPreferTargetResolutionStrategyRule()); }
	 rulePreferTargetResolutionStrategy
{ after(grammarAccess.getPreferTargetResolutionStrategyRule()); } 
	 EOF 
;

// Rule PreferTargetResolutionStrategy
rulePreferTargetResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreferTargetResolutionStrategyAccess().getNameAssignment()); }
		(rule__PreferTargetResolutionStrategy__NameAssignment)
		{ after(grammarAccess.getPreferTargetResolutionStrategyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteCorrespondencesResolutionStrategy
entryRuleDeleteCorrespondencesResolutionStrategy
:
{ before(grammarAccess.getDeleteCorrespondencesResolutionStrategyRule()); }
	 ruleDeleteCorrespondencesResolutionStrategy
{ after(grammarAccess.getDeleteCorrespondencesResolutionStrategyRule()); } 
	 EOF 
;

// Rule DeleteCorrespondencesResolutionStrategy
ruleDeleteCorrespondencesResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteCorrespondencesResolutionStrategyAccess().getNameAssignment()); }
		(rule__DeleteCorrespondencesResolutionStrategy__NameAssignment)
		{ after(grammarAccess.getDeleteCorrespondencesResolutionStrategyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContinueResolutionStrategy
entryRuleContinueResolutionStrategy
:
{ before(grammarAccess.getContinueResolutionStrategyRule()); }
	 ruleContinueResolutionStrategy
{ after(grammarAccess.getContinueResolutionStrategyRule()); } 
	 EOF 
;

// Rule ContinueResolutionStrategy
ruleContinueResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinueResolutionStrategyAccess().getNameAssignment()); }
		(rule__ContinueResolutionStrategy__NameAssignment)
		{ after(grammarAccess.getContinueResolutionStrategyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationalDelta
entryRuleOperationalDelta
:
{ before(grammarAccess.getOperationalDeltaRule()); }
	 ruleOperationalDelta
{ after(grammarAccess.getOperationalDeltaRule()); } 
	 EOF 
;

// Rule OperationalDelta
ruleOperationalDelta 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationalDeltaAccess().getGroup()); }
		(rule__OperationalDelta__Group__0)
		{ after(grammarAccess.getOperationalDeltaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageStart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageStartAccess().getPipelineStageSrcParserRuleCall_0()); }
		rulePipelineStageSrc
		{ after(grammarAccess.getPipelineStageStartAccess().getPipelineStageSrcParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageStartAccess().getPipelineStageTrgParserRuleCall_1()); }
		rulePipelineStageTrg
		{ after(grammarAccess.getPipelineStageStartAccess().getPipelineStageTrgParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__NextAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageSrcAccess().getNextPipelineStageFilterParserRuleCall_2_0_0()); }
		rulePipelineStageFilter
		{ after(grammarAccess.getPipelineStageSrcAccess().getNextPipelineStageFilterParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageSrcAccess().getNextPipelineStageEndParserRuleCall_2_0_1()); }
		rulePipelineStageEnd
		{ after(grammarAccess.getPipelineStageSrcAccess().getNextPipelineStageEndParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__NextAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageTrgAccess().getNextPipelineStageFilterParserRuleCall_2_0_0()); }
		rulePipelineStageFilter
		{ after(grammarAccess.getPipelineStageTrgAccess().getNextPipelineStageFilterParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageTrgAccess().getNextPipelineStageEndParserRuleCall_2_0_1()); }
		rulePipelineStageEnd
		{ after(grammarAccess.getPipelineStageTrgAccess().getNextPipelineStageEndParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageFilter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageFilterAccess().getPipelineStageModificationParserRuleCall_0()); }
		rulePipelineStageModification
		{ after(grammarAccess.getPipelineStageFilterAccess().getPipelineStageModificationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageFilterAccess().getPipelineStageTypeParserRuleCall_1()); }
		rulePipelineStageType
		{ after(grammarAccess.getPipelineStageFilterAccess().getPipelineStageTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageModification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageModificationAccess().getPipelineStageCreatedParserRuleCall_0()); }
		rulePipelineStageCreated
		{ after(grammarAccess.getPipelineStageModificationAccess().getPipelineStageCreatedParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageModificationAccess().getPipelineStageDeletedParserRuleCall_1()); }
		rulePipelineStageDeleted
		{ after(grammarAccess.getPipelineStageModificationAccess().getPipelineStageDeletedParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCreated__NextAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageCreatedAccess().getNextPipelineStageTypeParserRuleCall_2_0_0()); }
		rulePipelineStageType
		{ after(grammarAccess.getPipelineStageCreatedAccess().getNextPipelineStageTypeParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageCreatedAccess().getNextPipelineStageEndParserRuleCall_2_0_1()); }
		rulePipelineStageEnd
		{ after(grammarAccess.getPipelineStageCreatedAccess().getNextPipelineStageEndParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageDeleted__NextAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageDeletedAccess().getNextPipelineStageTypeParserRuleCall_2_0_0()); }
		rulePipelineStageType
		{ after(grammarAccess.getPipelineStageDeletedAccess().getNextPipelineStageTypeParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageDeletedAccess().getNextPipelineStageEndParserRuleCall_2_0_1()); }
		rulePipelineStageEnd
		{ after(grammarAccess.getPipelineStageDeletedAccess().getNextPipelineStageEndParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageEnd__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageEndAccess().getPipelineStageCountParserRuleCall_0()); }
		rulePipelineStageCount
		{ after(grammarAccess.getPipelineStageEndAccess().getPipelineStageCountParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageEndAccess().getPipelineStageExistsParserRuleCall_1()); }
		rulePipelineStageExists
		{ after(grammarAccess.getPipelineStageEndAccess().getPipelineStageExistsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__ExpressionAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getExpressionComparisonExpressionParserRuleCall_1_0_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getBooleanExpressionAccess().getExpressionComparisonExpressionParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getExpressionVariableReferenceParserRuleCall_1_0_1()); }
		ruleVariableReference
		{ after(grammarAccess.getBooleanExpressionAccess().getExpressionVariableReferenceParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getExpressionWrappedOrExpressionParserRuleCall_1_0_2()); }
		ruleWrappedOrExpression
		{ after(grammarAccess.getBooleanExpressionAccess().getExpressionWrappedOrExpressionParserRuleCall_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OpAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_0_0()); }
		'>'
		{ after(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1()); }
		'>='
		{ after(grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignKeyword_1_0_2()); }
		'<'
		{ after(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignKeyword_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_3()); }
		'<='
		{ after(grammarAccess.getComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_0_4()); }
		'=='
		{ after(grammarAccess.getComparisonExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_5()); }
		'!='
		{ after(grammarAccess.getComparisonExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonParameter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonParameterAccess().getVariableReferenceParserRuleCall_0()); }
		ruleVariableReference
		{ after(grammarAccess.getComparisonParameterAccess().getVariableReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonParameterAccess().getLiteralValueParserRuleCall_1()); }
		ruleLiteralValue
		{ after(grammarAccess.getComparisonParameterAccess().getLiteralValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getMergeAndPreserveResolutionStrategyParserRuleCall_0()); }
		ruleMergeAndPreserveResolutionStrategy
		{ after(grammarAccess.getResolutionStrategyAccess().getMergeAndPreserveResolutionStrategyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getRevokeAdditionResolutionStrategyParserRuleCall_1()); }
		ruleRevokeAdditionResolutionStrategy
		{ after(grammarAccess.getResolutionStrategyAccess().getRevokeAdditionResolutionStrategyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getRevokeDeletionResolutionStrategyParserRuleCall_2()); }
		ruleRevokeDeletionResolutionStrategy
		{ after(grammarAccess.getResolutionStrategyAccess().getRevokeDeletionResolutionStrategyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getFallbackResolutionStrategyParserRuleCall_3()); }
		ruleFallbackResolutionStrategy
		{ after(grammarAccess.getResolutionStrategyAccess().getFallbackResolutionStrategyParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackResolutionStrategy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFallbackResolutionStrategyAccess().getPreferSourceResolutionStrategyParserRuleCall_0()); }
		rulePreferSourceResolutionStrategy
		{ after(grammarAccess.getFallbackResolutionStrategyAccess().getPreferSourceResolutionStrategyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFallbackResolutionStrategyAccess().getPreferTargetResolutionStrategyParserRuleCall_1()); }
		rulePreferTargetResolutionStrategy
		{ after(grammarAccess.getFallbackResolutionStrategyAccess().getPreferTargetResolutionStrategyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFallbackResolutionStrategyAccess().getDeleteCorrespondencesResolutionStrategyParserRuleCall_2()); }
		ruleDeleteCorrespondencesResolutionStrategy
		{ after(grammarAccess.getFallbackResolutionStrategyAccess().getDeleteCorrespondencesResolutionStrategyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFallbackResolutionStrategyAccess().getContinueResolutionStrategyParserRuleCall_3()); }
		ruleContinueResolutionStrategy
		{ after(grammarAccess.getFallbackResolutionStrategyAccess().getContinueResolutionStrategyParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integrate__Group__0__Impl
	rule__Integrate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegrateAccess().getPackageAssignment_0()); }
	(rule__Integrate__PackageAssignment_0)?
	{ after(grammarAccess.getIntegrateAccess().getPackageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integrate__Group__1__Impl
	rule__Integrate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegrateAccess().getImportsAssignment_1()); }
	(rule__Integrate__ImportsAssignment_1)
	{ after(grammarAccess.getIntegrateAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integrate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegrateAccess().getConflictResolutionSpecificationsAssignment_2()); }
	(rule__Integrate__ConflictResolutionSpecificationsAssignment_2)*
	{ after(grammarAccess.getIntegrateAccess().getConflictResolutionSpecificationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getNameAssignment_1()); }
	(rule__Package__NameAssignment_1)
	{ after(grammarAccess.getPackageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSchemaAssignment_1()); }
	(rule__Import__SchemaAssignment_1)
	{ after(grammarAccess.getImportAccess().getSchemaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConflictResolutionSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__0__Impl
	rule__ConflictResolutionSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getNameAssignment_0()); }
	(rule__ConflictResolutionSpecification__NameAssignment_0)
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__1__Impl
	rule__ConflictResolutionSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__2__Impl
	rule__ConflictResolutionSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getSolveKeyword_2()); }
	'solve'
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getSolveKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__3__Impl
	rule__ConflictResolutionSpecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__4__Impl
	rule__ConflictResolutionSpecification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConflictResolutionSpecificationAccess().getVariablesAssignment_4()); }
		(rule__ConflictResolutionSpecification__VariablesAssignment_4)
		{ after(grammarAccess.getConflictResolutionSpecificationAccess().getVariablesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getConflictResolutionSpecificationAccess().getVariablesAssignment_4()); }
		(rule__ConflictResolutionSpecification__VariablesAssignment_4)*
		{ after(grammarAccess.getConflictResolutionSpecificationAccess().getVariablesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__5__Impl
	rule__ConflictResolutionSpecification__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getSatisfiesKeyword_5()); }
	'satisfies'
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getSatisfiesKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__6__Impl
	rule__ConflictResolutionSpecification__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__7__Impl
	rule__ConflictResolutionSpecification__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getRuleAssignment_7()); }
	(rule__ConflictResolutionSpecification__RuleAssignment_7)
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getRuleAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__8__Impl
	rule__ConflictResolutionSpecification__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__9__Impl
	rule__ConflictResolutionSpecification__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__10__Impl
	rule__ConflictResolutionSpecification__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getWithKeyword_10()); }
	'with'
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getWithKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionSpecification__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionSpecificationAccess().getResolutionAssignment_11()); }
	(rule__ConflictResolutionSpecification__ResolutionAssignment_11)
	{ after(grammarAccess.getConflictResolutionSpecificationAccess().getResolutionAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getPipelineAssignment_3()); }
	(rule__Variable__PipelineAssignment_3)
	{ after(grammarAccess.getVariableAccess().getPipelineAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PipelineStageSrc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageSrc__Group__0__Impl
	rule__PipelineStageSrc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageSrcAccess().getNameAssignment_0()); }
	(rule__PipelineStageSrc__NameAssignment_0)
	{ after(grammarAccess.getPipelineStageSrcAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageSrc__Group__1__Impl
	rule__PipelineStageSrc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageSrcAccess().getVerticalLineKeyword_1()); }
	'|'
	{ after(grammarAccess.getPipelineStageSrcAccess().getVerticalLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageSrc__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageSrcAccess().getNextAssignment_2()); }
	(rule__PipelineStageSrc__NextAssignment_2)
	{ after(grammarAccess.getPipelineStageSrcAccess().getNextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PipelineStageTrg__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageTrg__Group__0__Impl
	rule__PipelineStageTrg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTrgAccess().getNameAssignment_0()); }
	(rule__PipelineStageTrg__NameAssignment_0)
	{ after(grammarAccess.getPipelineStageTrgAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageTrg__Group__1__Impl
	rule__PipelineStageTrg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTrgAccess().getVerticalLineKeyword_1()); }
	'|'
	{ after(grammarAccess.getPipelineStageTrgAccess().getVerticalLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageTrg__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTrgAccess().getNextAssignment_2()); }
	(rule__PipelineStageTrg__NextAssignment_2)
	{ after(grammarAccess.getPipelineStageTrgAccess().getNextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PipelineStageCreated__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageCreated__Group__0__Impl
	rule__PipelineStageCreated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCreated__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageCreatedAccess().getNameAssignment_0()); }
	(rule__PipelineStageCreated__NameAssignment_0)
	{ after(grammarAccess.getPipelineStageCreatedAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCreated__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageCreated__Group__1__Impl
	rule__PipelineStageCreated__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCreated__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageCreatedAccess().getVerticalLineKeyword_1()); }
	'|'
	{ after(grammarAccess.getPipelineStageCreatedAccess().getVerticalLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCreated__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageCreated__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCreated__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageCreatedAccess().getNextAssignment_2()); }
	(rule__PipelineStageCreated__NextAssignment_2)
	{ after(grammarAccess.getPipelineStageCreatedAccess().getNextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PipelineStageDeleted__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageDeleted__Group__0__Impl
	rule__PipelineStageDeleted__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageDeleted__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageDeletedAccess().getNameAssignment_0()); }
	(rule__PipelineStageDeleted__NameAssignment_0)
	{ after(grammarAccess.getPipelineStageDeletedAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageDeleted__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageDeleted__Group__1__Impl
	rule__PipelineStageDeleted__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageDeleted__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageDeletedAccess().getVerticalLineKeyword_1()); }
	'|'
	{ after(grammarAccess.getPipelineStageDeletedAccess().getVerticalLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageDeleted__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageDeleted__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageDeleted__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageDeletedAccess().getNextAssignment_2()); }
	(rule__PipelineStageDeleted__NextAssignment_2)
	{ after(grammarAccess.getPipelineStageDeletedAccess().getNextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PipelineStageType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageType__Group__0__Impl
	rule__PipelineStageType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTypeAccess().getNameAssignment_0()); }
	(rule__PipelineStageType__NameAssignment_0)
	{ after(grammarAccess.getPipelineStageTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageType__Group__1__Impl
	rule__PipelineStageType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTypeAccess().getTypesAssignment_1()); }
	(rule__PipelineStageType__TypesAssignment_1)
	{ after(grammarAccess.getPipelineStageTypeAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageType__Group__2__Impl
	rule__PipelineStageType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTypeAccess().getGroup_2()); }
	(rule__PipelineStageType__Group_2__0)*
	{ after(grammarAccess.getPipelineStageTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageType__Group__3__Impl
	rule__PipelineStageType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTypeAccess().getVerticalLineKeyword_3()); }
	'|'
	{ after(grammarAccess.getPipelineStageTypeAccess().getVerticalLineKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTypeAccess().getNextAssignment_4()); }
	(rule__PipelineStageType__NextAssignment_4)
	{ after(grammarAccess.getPipelineStageTypeAccess().getNextAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PipelineStageType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageType__Group_2__0__Impl
	rule__PipelineStageType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTypeAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getPipelineStageTypeAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineStageType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineStageTypeAccess().getTypesAssignment_2_1()); }
	(rule__PipelineStageType__TypesAssignment_2_1)
	{ after(grammarAccess.getPipelineStageTypeAccess().getTypesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getOrExpressionAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__OrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
	ruleBooleanExpression
	{ after(grammarAccess.getAndExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getAndExpressionAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__0__Impl
	rule__BooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getInvertAssignment_0()); }
	(rule__BooleanExpression__InvertAssignment_0)?
	{ after(grammarAccess.getBooleanExpressionAccess().getInvertAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getExpressionAssignment_1()); }
	(rule__BooleanExpression__ExpressionAssignment_1)
	{ after(grammarAccess.getBooleanExpressionAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WrappedOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WrappedOrExpression__Group__0__Impl
	rule__WrappedOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WrappedOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWrappedOrExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getWrappedOrExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WrappedOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WrappedOrExpression__Group__1__Impl
	rule__WrappedOrExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WrappedOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWrappedOrExpressionAccess().getExpressionAssignment_1()); }
	(rule__WrappedOrExpression__ExpressionAssignment_1)
	{ after(grammarAccess.getWrappedOrExpressionAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WrappedOrExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WrappedOrExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WrappedOrExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWrappedOrExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getWrappedOrExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__0__Impl
	rule__ComparisonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLhsAssignment_0()); }
	(rule__ComparisonExpression__LhsAssignment_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getLhsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__1__Impl
	rule__ComparisonExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOpAssignment_1()); }
	(rule__ComparisonExpression__OpAssignment_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_2()); }
	(rule__ComparisonExpression__RhsAssignment_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resolution__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resolution__Group__0__Impl
	rule__Resolution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionAccess().getStrategiesAssignment_0()); }
	(rule__Resolution__StrategiesAssignment_0)
	{ after(grammarAccess.getResolutionAccess().getStrategiesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resolution__Group__1__Impl
	rule__Resolution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionAccess().getGroup_1()); }
	(rule__Resolution__Group_1__0)*
	{ after(grammarAccess.getResolutionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resolution__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionAccess().getFallbackAssignment_2()); }
	(rule__Resolution__FallbackAssignment_2)?
	{ after(grammarAccess.getResolutionAccess().getFallbackAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resolution__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resolution__Group_1__0__Impl
	rule__Resolution__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionAccess().getOrKeyword_1_0()); }
	'or'
	{ after(grammarAccess.getResolutionAccess().getOrKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resolution__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionAccess().getStrategiesAssignment_1_1()); }
	(rule__Resolution__StrategiesAssignment_1_1)
	{ after(grammarAccess.getResolutionAccess().getStrategiesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResolutionStrategyWithOperationalDelta__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResolutionStrategyWithOperationalDelta__Group__0__Impl
	rule__ResolutionStrategyWithOperationalDelta__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getStrategyAssignment_0()); }
	(rule__ResolutionStrategyWithOperationalDelta__StrategyAssignment_0)
	{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getStrategyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResolutionStrategyWithOperationalDelta__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getGroup_1()); }
	(rule__ResolutionStrategyWithOperationalDelta__Group_1__0)?
	{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResolutionStrategyWithOperationalDelta__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResolutionStrategyWithOperationalDelta__Group_1__0__Impl
	rule__ResolutionStrategyWithOperationalDelta__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getWhenKeyword_1_0()); }
	'when'
	{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getWhenKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResolutionStrategyWithOperationalDelta__Group_1__1__Impl
	rule__ResolutionStrategyWithOperationalDelta__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResolutionStrategyWithOperationalDelta__Group_1__2__Impl
	rule__ResolutionStrategyWithOperationalDelta__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getOperationalDeltaAssignment_1_2()); }
	(rule__ResolutionStrategyWithOperationalDelta__OperationalDeltaAssignment_1_2)
	{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getOperationalDeltaAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResolutionStrategyWithOperationalDelta__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationalDelta__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalDelta__Group__0__Impl
	rule__OperationalDelta__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOperationalDeltaAccess().getVariablesAssignment_0()); }
		(rule__OperationalDelta__VariablesAssignment_0)
		{ after(grammarAccess.getOperationalDeltaAccess().getVariablesAssignment_0()); }
	)
	(
		{ before(grammarAccess.getOperationalDeltaAccess().getVariablesAssignment_0()); }
		(rule__OperationalDelta__VariablesAssignment_0)*
		{ after(grammarAccess.getOperationalDeltaAccess().getVariablesAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalDelta__Group__1__Impl
	rule__OperationalDelta__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalDeltaAccess().getSatisfiesKeyword_1()); }
	'satisfies'
	{ after(grammarAccess.getOperationalDeltaAccess().getSatisfiesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalDelta__Group__2__Impl
	rule__OperationalDelta__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalDeltaAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getOperationalDeltaAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalDelta__Group__3__Impl
	rule__OperationalDelta__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalDeltaAccess().getRuleAssignment_3()); }
	(rule__OperationalDelta__RuleAssignment_3)
	{ after(grammarAccess.getOperationalDeltaAccess().getRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalDelta__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalDeltaAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOperationalDeltaAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Integrate__PackageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegrateAccess().getPackagePackageParserRuleCall_0_0()); }
		rulePackage
		{ after(grammarAccess.getIntegrateAccess().getPackagePackageParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegrateAccess().getImportsImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getIntegrateAccess().getImportsImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__ConflictResolutionSpecificationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegrateAccess().getConflictResolutionSpecificationsConflictResolutionSpecificationParserRuleCall_2_0()); }
		ruleConflictResolutionSpecification
		{ after(grammarAccess.getIntegrateAccess().getConflictResolutionSpecificationsConflictResolutionSpecificationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__SchemaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getSchemaSchemaCrossReference_1_0()); }
		(
			{ before(grammarAccess.getImportAccess().getSchemaSchemaIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getImportAccess().getSchemaSchemaIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getImportAccess().getSchemaSchemaCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictResolutionSpecificationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConflictResolutionSpecificationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__VariablesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictResolutionSpecificationAccess().getVariablesVariableParserRuleCall_4_0()); }
		ruleVariable
		{ after(grammarAccess.getConflictResolutionSpecificationAccess().getVariablesVariableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__RuleAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictResolutionSpecificationAccess().getRuleSatisfactionRuleParserRuleCall_7_0()); }
		ruleSatisfactionRule
		{ after(grammarAccess.getConflictResolutionSpecificationAccess().getRuleSatisfactionRuleParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionSpecification__ResolutionAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictResolutionSpecificationAccess().getResolutionResolutionParserRuleCall_11_0()); }
		ruleResolution
		{ after(grammarAccess.getConflictResolutionSpecificationAccess().getResolutionResolutionParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__PipelineAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getPipelinePipelineParserRuleCall_3_0()); }
		rulePipeline
		{ after(grammarAccess.getVariableAccess().getPipelinePipelineParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getRefVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableReferenceAccess().getRefVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableReferenceAccess().getRefVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableReferenceAccess().getRefVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__StartAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineAccess().getStartPipelineStageStartParserRuleCall_0()); }
		rulePipelineStageStart
		{ after(grammarAccess.getPipelineAccess().getStartPipelineStageStartParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0_0()); }
		(
			{ before(grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0_0()); }
			'src'
			{ after(grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0_0()); }
		)
		{ after(grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__NextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageSrcAccess().getNextAlternatives_2_0()); }
		(rule__PipelineStageSrc__NextAlternatives_2_0)
		{ after(grammarAccess.getPipelineStageSrcAccess().getNextAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0_0()); }
		(
			{ before(grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0_0()); }
			'trg'
			{ after(grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0_0()); }
		)
		{ after(grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__NextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageTrgAccess().getNextAlternatives_2_0()); }
		(rule__PipelineStageTrg__NextAlternatives_2_0)
		{ after(grammarAccess.getPipelineStageTrgAccess().getNextAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCreated__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageCreatedAccess().getNameCreatedKeyword_0_0()); }
		(
			{ before(grammarAccess.getPipelineStageCreatedAccess().getNameCreatedKeyword_0_0()); }
			'created'
			{ after(grammarAccess.getPipelineStageCreatedAccess().getNameCreatedKeyword_0_0()); }
		)
		{ after(grammarAccess.getPipelineStageCreatedAccess().getNameCreatedKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCreated__NextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageCreatedAccess().getNextAlternatives_2_0()); }
		(rule__PipelineStageCreated__NextAlternatives_2_0)
		{ after(grammarAccess.getPipelineStageCreatedAccess().getNextAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageDeleted__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageDeletedAccess().getNameDeletedKeyword_0_0()); }
		(
			{ before(grammarAccess.getPipelineStageDeletedAccess().getNameDeletedKeyword_0_0()); }
			'deleted'
			{ after(grammarAccess.getPipelineStageDeletedAccess().getNameDeletedKeyword_0_0()); }
		)
		{ after(grammarAccess.getPipelineStageDeletedAccess().getNameDeletedKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageDeleted__NextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageDeletedAccess().getNextAlternatives_2_0()); }
		(rule__PipelineStageDeleted__NextAlternatives_2_0)
		{ after(grammarAccess.getPipelineStageDeletedAccess().getNextAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageTypeAccess().getNameTypeKeyword_0_0()); }
		(
			{ before(grammarAccess.getPipelineStageTypeAccess().getNameTypeKeyword_0_0()); }
			'type'
			{ after(grammarAccess.getPipelineStageTypeAccess().getNameTypeKeyword_0_0()); }
		)
		{ after(grammarAccess.getPipelineStageTypeAccess().getNameTypeKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageTypeAccess().getTypesEClassCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPipelineStageTypeAccess().getTypesEClassIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPipelineStageTypeAccess().getTypesEClassIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPipelineStageTypeAccess().getTypesEClassCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__TypesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageTypeAccess().getTypesEClassCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getPipelineStageTypeAccess().getTypesEClassIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPipelineStageTypeAccess().getTypesEClassIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getPipelineStageTypeAccess().getTypesEClassCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageType__NextAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageTypeAccess().getNextPipelineStageEndParserRuleCall_4_0()); }
		rulePipelineStageEnd
		{ after(grammarAccess.getPipelineStageTypeAccess().getNextPipelineStageEndParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageCount__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageCountAccess().getNameCountKeyword_0()); }
		(
			{ before(grammarAccess.getPipelineStageCountAccess().getNameCountKeyword_0()); }
			'count'
			{ after(grammarAccess.getPipelineStageCountAccess().getNameCountKeyword_0()); }
		)
		{ after(grammarAccess.getPipelineStageCountAccess().getNameCountKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageExists__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageExistsAccess().getNameExistsKeyword_0()); }
		(
			{ before(grammarAccess.getPipelineStageExistsAccess().getNameExistsKeyword_0()); }
			'exists'
			{ after(grammarAccess.getPipelineStageExistsAccess().getNameExistsKeyword_0()); }
		)
		{ after(grammarAccess.getPipelineStageExistsAccess().getNameExistsKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SatisfactionRule__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSatisfactionRuleAccess().getExpressionOrExpressionParserRuleCall_0()); }
		ruleOrExpression
		{ after(grammarAccess.getSatisfactionRuleAccess().getExpressionOrExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightBooleanExpressionParserRuleCall_1_2_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightBooleanExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__InvertAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getInvertNotKeyword_0_0()); }
		(
			{ before(grammarAccess.getBooleanExpressionAccess().getInvertNotKeyword_0_0()); }
			'not'
			{ after(grammarAccess.getBooleanExpressionAccess().getInvertNotKeyword_0_0()); }
		)
		{ after(grammarAccess.getBooleanExpressionAccess().getInvertNotKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getExpressionAlternatives_1_0()); }
		(rule__BooleanExpression__ExpressionAlternatives_1_0)
		{ after(grammarAccess.getBooleanExpressionAccess().getExpressionAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WrappedOrExpression__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWrappedOrExpressionAccess().getExpressionOrExpressionParserRuleCall_1_0()); }
		ruleOrExpression
		{ after(grammarAccess.getWrappedOrExpressionAccess().getExpressionOrExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__LhsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getLhsComparisonParameterParserRuleCall_0_0()); }
		ruleComparisonParameter
		{ after(grammarAccess.getComparisonExpressionAccess().getLhsComparisonParameterParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOpAlternatives_1_0()); }
		(rule__ComparisonExpression__OpAlternatives_1_0)
		{ after(grammarAccess.getComparisonExpressionAccess().getOpAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsComparisonParameterParserRuleCall_2_0()); }
		ruleComparisonParameter
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsComparisonParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralValueAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getLiteralValueAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__StrategiesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResolutionAccess().getStrategiesResolutionStrategyWithOperationalDeltaParserRuleCall_0_0()); }
		ruleResolutionStrategyWithOperationalDelta
		{ after(grammarAccess.getResolutionAccess().getStrategiesResolutionStrategyWithOperationalDeltaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__StrategiesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResolutionAccess().getStrategiesResolutionStrategyWithOperationalDeltaParserRuleCall_1_1_0()); }
		ruleResolutionStrategyWithOperationalDelta
		{ after(grammarAccess.getResolutionAccess().getStrategiesResolutionStrategyWithOperationalDeltaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resolution__FallbackAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResolutionAccess().getFallbackFallbackResolutionStrategyParserRuleCall_2_0()); }
		ruleFallbackResolutionStrategy
		{ after(grammarAccess.getResolutionAccess().getFallbackFallbackResolutionStrategyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__StrategyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getStrategyResolutionStrategyParserRuleCall_0_0()); }
		ruleResolutionStrategy
		{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getStrategyResolutionStrategyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategyWithOperationalDelta__OperationalDeltaAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getOperationalDeltaOperationalDeltaParserRuleCall_1_2_0()); }
		ruleOperationalDelta
		{ after(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getOperationalDeltaOperationalDeltaParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeAndPreserveResolutionStrategy__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMergeAndPreserveResolutionStrategyAccess().getNameMergeAndPreserveKeyword_0()); }
		(
			{ before(grammarAccess.getMergeAndPreserveResolutionStrategyAccess().getNameMergeAndPreserveKeyword_0()); }
			'mergeAndPreserve'
			{ after(grammarAccess.getMergeAndPreserveResolutionStrategyAccess().getNameMergeAndPreserveKeyword_0()); }
		)
		{ after(grammarAccess.getMergeAndPreserveResolutionStrategyAccess().getNameMergeAndPreserveKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RevokeAdditionResolutionStrategy__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRevokeAdditionResolutionStrategyAccess().getNameRevokeAdditionKeyword_0()); }
		(
			{ before(grammarAccess.getRevokeAdditionResolutionStrategyAccess().getNameRevokeAdditionKeyword_0()); }
			'revokeAddition'
			{ after(grammarAccess.getRevokeAdditionResolutionStrategyAccess().getNameRevokeAdditionKeyword_0()); }
		)
		{ after(grammarAccess.getRevokeAdditionResolutionStrategyAccess().getNameRevokeAdditionKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RevokeDeletionResolutionStrategy__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRevokeDeletionResolutionStrategyAccess().getNameRevokeDeletionKeyword_0()); }
		(
			{ before(grammarAccess.getRevokeDeletionResolutionStrategyAccess().getNameRevokeDeletionKeyword_0()); }
			'revokeDeletion'
			{ after(grammarAccess.getRevokeDeletionResolutionStrategyAccess().getNameRevokeDeletionKeyword_0()); }
		)
		{ after(grammarAccess.getRevokeDeletionResolutionStrategyAccess().getNameRevokeDeletionKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreferSourceResolutionStrategy__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreferSourceResolutionStrategyAccess().getNamePreferSourceKeyword_0()); }
		(
			{ before(grammarAccess.getPreferSourceResolutionStrategyAccess().getNamePreferSourceKeyword_0()); }
			'preferSource'
			{ after(grammarAccess.getPreferSourceResolutionStrategyAccess().getNamePreferSourceKeyword_0()); }
		)
		{ after(grammarAccess.getPreferSourceResolutionStrategyAccess().getNamePreferSourceKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreferTargetResolutionStrategy__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreferTargetResolutionStrategyAccess().getNamePreferTargetKeyword_0()); }
		(
			{ before(grammarAccess.getPreferTargetResolutionStrategyAccess().getNamePreferTargetKeyword_0()); }
			'preferTarget'
			{ after(grammarAccess.getPreferTargetResolutionStrategyAccess().getNamePreferTargetKeyword_0()); }
		)
		{ after(grammarAccess.getPreferTargetResolutionStrategyAccess().getNamePreferTargetKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteCorrespondencesResolutionStrategy__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteCorrespondencesResolutionStrategyAccess().getNameDeleteCorrespondencesKeyword_0()); }
		(
			{ before(grammarAccess.getDeleteCorrespondencesResolutionStrategyAccess().getNameDeleteCorrespondencesKeyword_0()); }
			'deleteCorrespondences'
			{ after(grammarAccess.getDeleteCorrespondencesResolutionStrategyAccess().getNameDeleteCorrespondencesKeyword_0()); }
		)
		{ after(grammarAccess.getDeleteCorrespondencesResolutionStrategyAccess().getNameDeleteCorrespondencesKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueResolutionStrategy__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContinueResolutionStrategyAccess().getNameContinueKeyword_0()); }
		(
			{ before(grammarAccess.getContinueResolutionStrategyAccess().getNameContinueKeyword_0()); }
			'continue'
			{ after(grammarAccess.getContinueResolutionStrategyAccess().getNameContinueKeyword_0()); }
		)
		{ after(grammarAccess.getContinueResolutionStrategyAccess().getNameContinueKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__VariablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationalDeltaAccess().getVariablesVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getOperationalDeltaAccess().getVariablesVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalDelta__RuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationalDeltaAccess().getRuleSatisfactionRuleParserRuleCall_3_0()); }
		ruleSatisfactionRule
		{ after(grammarAccess.getOperationalDeltaAccess().getRuleSatisfactionRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
