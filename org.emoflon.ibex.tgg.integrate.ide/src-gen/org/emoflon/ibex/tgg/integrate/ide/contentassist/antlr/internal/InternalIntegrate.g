/*
 * generated by Xtext 2.20.0
 */
grammar InternalIntegrate;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.emoflon.ibex.tgg.integrate.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.emoflon.ibex.tgg.integrate.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.emoflon.ibex.tgg.integrate.services.IntegrateGrammarAccess;

}
@parser::members {
	private IntegrateGrammarAccess grammarAccess;

	public void setGrammarAccess(IntegrateGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleIntegrate
entryRuleIntegrate
:
{ before(grammarAccess.getIntegrateRule()); }
	 ruleIntegrate
{ after(grammarAccess.getIntegrateRule()); } 
	 EOF 
;

// Rule Integrate
ruleIntegrate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegrateAccess().getGroup()); }
		(rule__Integrate__Group__0)
		{ after(grammarAccess.getIntegrateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConflictResolutionStrategy
entryRuleConflictResolutionStrategy
:
{ before(grammarAccess.getConflictResolutionStrategyRule()); }
	 ruleConflictResolutionStrategy
{ after(grammarAccess.getConflictResolutionStrategyRule()); } 
	 EOF 
;

// Rule ConflictResolutionStrategy
ruleConflictResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConflictResolutionStrategyAccess().getGroup()); }
		(rule__ConflictResolutionStrategy__Group__0)
		{ after(grammarAccess.getConflictResolutionStrategyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipeline
entryRulePipeline
:
{ before(grammarAccess.getPipelineRule()); }
	 rulePipeline
{ after(grammarAccess.getPipelineRule()); } 
	 EOF 
;

// Rule Pipeline
rulePipeline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineAccess().getGroup()); }
		(rule__Pipeline__Group__0)
		{ after(grammarAccess.getPipelineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageSrc
entryRulePipelineStageSrc
:
{ before(grammarAccess.getPipelineStageSrcRule()); }
	 rulePipelineStageSrc
{ after(grammarAccess.getPipelineStageSrcRule()); } 
	 EOF 
;

// Rule PipelineStageSrc
rulePipelineStageSrc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageSrcAccess().getNameAssignment()); }
		(rule__PipelineStageSrc__NameAssignment)
		{ after(grammarAccess.getPipelineStageSrcAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStageTrg
entryRulePipelineStageTrg
:
{ before(grammarAccess.getPipelineStageTrgRule()); }
	 rulePipelineStageTrg
{ after(grammarAccess.getPipelineStageTrgRule()); } 
	 EOF 
;

// Rule PipelineStageTrg
rulePipelineStageTrg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageTrgAccess().getNameAssignment()); }
		(rule__PipelineStageTrg__NameAssignment)
		{ after(grammarAccess.getPipelineStageTrgAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineStage
entryRulePipelineStage
:
{ before(grammarAccess.getPipelineStageRule()); }
	 rulePipelineStage
{ after(grammarAccess.getPipelineStageRule()); } 
	 EOF 
;

// Rule PipelineStage
rulePipelineStage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineStageAccess().getAlternatives()); }
		(rule__PipelineStage__Alternatives)
		{ after(grammarAccess.getPipelineStageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineFilterStage
entryRulePipelineFilterStage
:
{ before(grammarAccess.getPipelineFilterStageRule()); }
	 rulePipelineFilterStage
{ after(grammarAccess.getPipelineFilterStageRule()); } 
	 EOF 
;

// Rule PipelineFilterStage
rulePipelineFilterStage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineFilterStageAccess().getAlternatives()); }
		(rule__PipelineFilterStage__Alternatives)
		{ after(grammarAccess.getPipelineFilterStageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineCreatedFilterStage
entryRulePipelineCreatedFilterStage
:
{ before(grammarAccess.getPipelineCreatedFilterStageRule()); }
	 rulePipelineCreatedFilterStage
{ after(grammarAccess.getPipelineCreatedFilterStageRule()); } 
	 EOF 
;

// Rule PipelineCreatedFilterStage
rulePipelineCreatedFilterStage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineCreatedFilterStageAccess().getNameAssignment()); }
		(rule__PipelineCreatedFilterStage__NameAssignment)
		{ after(grammarAccess.getPipelineCreatedFilterStageAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineDeletedFilterStage
entryRulePipelineDeletedFilterStage
:
{ before(grammarAccess.getPipelineDeletedFilterStageRule()); }
	 rulePipelineDeletedFilterStage
{ after(grammarAccess.getPipelineDeletedFilterStageRule()); } 
	 EOF 
;

// Rule PipelineDeletedFilterStage
rulePipelineDeletedFilterStage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineDeletedFilterStageAccess().getNameAssignment()); }
		(rule__PipelineDeletedFilterStage__NameAssignment)
		{ after(grammarAccess.getPipelineDeletedFilterStageAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineTypeFilterStage
entryRulePipelineTypeFilterStage
:
{ before(grammarAccess.getPipelineTypeFilterStageRule()); }
	 rulePipelineTypeFilterStage
{ after(grammarAccess.getPipelineTypeFilterStageRule()); } 
	 EOF 
;

// Rule PipelineTypeFilterStage
rulePipelineTypeFilterStage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineTypeFilterStageAccess().getGroup()); }
		(rule__PipelineTypeFilterStage__Group__0)
		{ after(grammarAccess.getPipelineTypeFilterStageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineCountStage
entryRulePipelineCountStage
:
{ before(grammarAccess.getPipelineCountStageRule()); }
	 rulePipelineCountStage
{ after(grammarAccess.getPipelineCountStageRule()); } 
	 EOF 
;

// Rule PipelineCountStage
rulePipelineCountStage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineCountStageAccess().getNameAssignment()); }
		(rule__PipelineCountStage__NameAssignment)
		{ after(grammarAccess.getPipelineCountStageAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSatisfactionRule
entryRuleSatisfactionRule
:
{ before(grammarAccess.getSatisfactionRuleRule()); }
	 ruleSatisfactionRule
{ after(grammarAccess.getSatisfactionRuleRule()); } 
	 EOF 
;

// Rule SatisfactionRule
ruleSatisfactionRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSatisfactionRuleAccess().getGroup()); }
		(rule__SatisfactionRule__Group__0)
		{ after(grammarAccess.getSatisfactionRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResolutionStrategy
entryRuleResolutionStrategy
:
{ before(grammarAccess.getResolutionStrategyRule()); }
	 ruleResolutionStrategy
{ after(grammarAccess.getResolutionStrategyRule()); } 
	 EOF 
;

// Rule ResolutionStrategy
ruleResolutionStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getNameAssignment()); }
		(rule__ResolutionStrategy__NameAssignment)
		{ after(grammarAccess.getResolutionStrategyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__FirstAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineAccess().getFirstPipelineStageSrcParserRuleCall_0_0_0()); }
		rulePipelineStageSrc
		{ after(grammarAccess.getPipelineAccess().getFirstPipelineStageSrcParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineAccess().getFirstPipelineStageTrgParserRuleCall_0_0_1()); }
		rulePipelineStageTrg
		{ after(grammarAccess.getPipelineAccess().getFirstPipelineStageTrgParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStage__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageAccess().getPipelineFilterStageParserRuleCall_0()); }
		rulePipelineFilterStage
		{ after(grammarAccess.getPipelineStageAccess().getPipelineFilterStageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineStageAccess().getPipelineCountStageParserRuleCall_1()); }
		rulePipelineCountStage
		{ after(grammarAccess.getPipelineStageAccess().getPipelineCountStageParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineFilterStage__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineFilterStageAccess().getPipelineCreatedFilterStageParserRuleCall_0()); }
		rulePipelineCreatedFilterStage
		{ after(grammarAccess.getPipelineFilterStageAccess().getPipelineCreatedFilterStageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineFilterStageAccess().getPipelineDeletedFilterStageParserRuleCall_1()); }
		rulePipelineDeletedFilterStage
		{ after(grammarAccess.getPipelineFilterStageAccess().getPipelineDeletedFilterStageParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPipelineFilterStageAccess().getPipelineTypeFilterStageParserRuleCall_2()); }
		rulePipelineTypeFilterStage
		{ after(grammarAccess.getPipelineFilterStageAccess().getPipelineTypeFilterStageParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SatisfactionRule__OtherRulesAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSatisfactionRuleAccess().getOtherRulesAndParserRuleCall_1_0_0()); }
		ruleAnd
		{ after(grammarAccess.getSatisfactionRuleAccess().getOtherRulesAndParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfactionRuleAccess().getOtherRulesOrParserRuleCall_1_0_1()); }
		ruleOr
		{ after(grammarAccess.getSatisfactionRuleAccess().getOtherRulesOrParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getV1Assignment_0_0()); }
		(rule__Comparison__V1Assignment_0_0)
		{ after(grammarAccess.getComparisonAccess().getV1Assignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getN1Assignment_0_1()); }
		(rule__Comparison__N1Assignment_0_1)
		{ after(grammarAccess.getComparisonAccess().getN1Assignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__C1Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getC1GreaterThanSignKeyword_1_0_0()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getC1GreaterThanSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getC1GreaterThanSignEqualsSignKeyword_1_0_1()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getC1GreaterThanSignEqualsSignKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getC1LessThanSignKeyword_1_0_2()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getC1LessThanSignKeyword_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getC1LessThanSignEqualsSignKeyword_1_0_3()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getC1LessThanSignEqualsSignKeyword_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getV2Assignment_2_0()); }
		(rule__Comparison__V2Assignment_2_0)
		{ after(grammarAccess.getComparisonAccess().getV2Assignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getN2Assignment_2_1()); }
		(rule__Comparison__N2Assignment_2_1)
		{ after(grammarAccess.getComparisonAccess().getN2Assignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategy__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getNameActAndLetRepairKeyword_0_0()); }
		'actAndLetRepair'
		{ after(grammarAccess.getResolutionStrategyAccess().getNameActAndLetRepairKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getNameMergeAndPreserveKeyword_0_1()); }
		'mergeAndPreserve'
		{ after(grammarAccess.getResolutionStrategyAccess().getNameMergeAndPreserveKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getNamePreferSourceKeyword_0_2()); }
		'preferSource'
		{ after(grammarAccess.getResolutionStrategyAccess().getNamePreferSourceKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getNamePreferTargetKeyword_0_3()); }
		'preferTarget'
		{ after(grammarAccess.getResolutionStrategyAccess().getNamePreferTargetKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getNameRevokeAdditionKeyword_0_4()); }
		'revokeAddition'
		{ after(grammarAccess.getResolutionStrategyAccess().getNameRevokeAdditionKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getNameRevokeDeletionKeyword_0_5()); }
		'revokeDeletion'
		{ after(grammarAccess.getResolutionStrategyAccess().getNameRevokeDeletionKeyword_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integrate__Group__0__Impl
	rule__Integrate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegrateAccess().getImportsAssignment_0()); }
	(rule__Integrate__ImportsAssignment_0)*
	{ after(grammarAccess.getIntegrateAccess().getImportsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integrate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegrateAccess().getConflictResolutionStrategiesAssignment_1()); }
	(rule__Integrate__ConflictResolutionStrategiesAssignment_1)*
	{ after(grammarAccess.getIntegrateAccess().getConflictResolutionStrategiesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'#import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getRuleAssignment_1()); }
	(rule__Import__RuleAssignment_1)
	{ after(grammarAccess.getImportAccess().getRuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConflictResolutionStrategy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__0__Impl
	rule__ConflictResolutionStrategy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getConflictResolutionStrategyAction_0()); }
	()
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getConflictResolutionStrategyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__1__Impl
	rule__ConflictResolutionStrategy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getSolveKeyword_1()); }
	'solve'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getSolveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__2__Impl
	rule__ConflictResolutionStrategy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getConflictKeyword_2()); }
	'conflict'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getConflictKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__3__Impl
	rule__ConflictResolutionStrategy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getForKeyword_3()); }
	'for'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getForKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__4__Impl
	rule__ConflictResolutionStrategy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getAllKeyword_4()); }
	'all'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getAllKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__5__Impl
	rule__ConflictResolutionStrategy__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__6__Impl
	rule__ConflictResolutionStrategy__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConflictResolutionStrategyAccess().getVariablesAssignment_6()); }
		(rule__ConflictResolutionStrategy__VariablesAssignment_6)
		{ after(grammarAccess.getConflictResolutionStrategyAccess().getVariablesAssignment_6()); }
	)
	(
		{ before(grammarAccess.getConflictResolutionStrategyAccess().getVariablesAssignment_6()); }
		(rule__ConflictResolutionStrategy__VariablesAssignment_6)*
		{ after(grammarAccess.getConflictResolutionStrategyAccess().getVariablesAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__7__Impl
	rule__ConflictResolutionStrategy__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getSatisfiesKeyword_7()); }
	'satisfies'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getSatisfiesKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__8__Impl
	rule__ConflictResolutionStrategy__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__9__Impl
	rule__ConflictResolutionStrategy__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getRuleAssignment_9()); }
	(rule__ConflictResolutionStrategy__RuleAssignment_9)
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getRuleAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__10__Impl
	rule__ConflictResolutionStrategy__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__11__Impl
	rule__ConflictResolutionStrategy__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__12__Impl
	rule__ConflictResolutionStrategy__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getWithKeyword_12()); }
	'with'
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getWithKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictResolutionStrategy__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictResolutionStrategyAccess().getResolutionStrategyAssignment_13()); }
	(rule__ConflictResolutionStrategy__ResolutionStrategyAssignment_13)
	{ after(grammarAccess.getConflictResolutionStrategyAccess().getResolutionStrategyAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getPipelineAssignment_3()); }
	(rule__Variable__PipelineAssignment_3)
	{ after(grammarAccess.getVariableAccess().getPipelineAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pipeline__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__0__Impl
	rule__Pipeline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getFirstAssignment_0()); }
	(rule__Pipeline__FirstAssignment_0)
	{ after(grammarAccess.getPipelineAccess().getFirstAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getGroup_1()); }
	(rule__Pipeline__Group_1__0)*
	{ after(grammarAccess.getPipelineAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pipeline__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group_1__0__Impl
	rule__Pipeline__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getVerticalLineKeyword_1_0()); }
	'|'
	{ after(grammarAccess.getPipelineAccess().getVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getNextAssignment_1_1()); }
	(rule__Pipeline__NextAssignment_1_1)
	{ after(grammarAccess.getPipelineAccess().getNextAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PipelineTypeFilterStage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineTypeFilterStage__Group__0__Impl
	rule__PipelineTypeFilterStage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineTypeFilterStage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineTypeFilterStageAccess().getNameAssignment_0()); }
	(rule__PipelineTypeFilterStage__NameAssignment_0)
	{ after(grammarAccess.getPipelineTypeFilterStageAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineTypeFilterStage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PipelineTypeFilterStage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineTypeFilterStage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineTypeFilterStageAccess().getTypeAssignment_1()); }
	(rule__PipelineTypeFilterStage__TypeAssignment_1)
	{ after(grammarAccess.getPipelineTypeFilterStageAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SatisfactionRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SatisfactionRule__Group__0__Impl
	rule__SatisfactionRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SatisfactionRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSatisfactionRuleAccess().getFirstRuleAssignment_0()); }
	(rule__SatisfactionRule__FirstRuleAssignment_0)
	{ after(grammarAccess.getSatisfactionRuleAccess().getFirstRuleAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SatisfactionRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SatisfactionRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SatisfactionRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSatisfactionRuleAccess().getOtherRulesAssignment_1()); }
	(rule__SatisfactionRule__OtherRulesAssignment_1)*
	{ after(grammarAccess.getSatisfactionRuleAccess().getOtherRulesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_0()); }
	'and'
	{ after(grammarAccess.getAndAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getComparisonParserRuleCall_1()); }
	ruleComparison
	{ after(grammarAccess.getAndAccess().getComparisonParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrKeyword_0()); }
	'or'
	{ after(grammarAccess.getOrAccess().getOrKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getComparisonParserRuleCall_1()); }
	ruleComparison
	{ after(grammarAccess.getOrAccess().getComparisonParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAlternatives_0()); }
	(rule__Comparison__Alternatives_0)
	{ after(grammarAccess.getComparisonAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
	rule__Comparison__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getC1Assignment_1()); }
	(rule__Comparison__C1Assignment_1)
	{ after(grammarAccess.getComparisonAccess().getC1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAlternatives_2()); }
	(rule__Comparison__Alternatives_2)
	{ after(grammarAccess.getComparisonAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Integrate__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegrateAccess().getImportsImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getIntegrateAccess().getImportsImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integrate__ConflictResolutionStrategiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegrateAccess().getConflictResolutionStrategiesConflictResolutionStrategyParserRuleCall_1_0()); }
		ruleConflictResolutionStrategy
		{ after(grammarAccess.getIntegrateAccess().getConflictResolutionStrategiesConflictResolutionStrategyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__RuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getRuleRuleCrossReference_1_0()); }
		(
			{ before(grammarAccess.getImportAccess().getRuleRuleIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getImportAccess().getRuleRuleIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getImportAccess().getRuleRuleCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__VariablesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictResolutionStrategyAccess().getVariablesVariableParserRuleCall_6_0()); }
		ruleVariable
		{ after(grammarAccess.getConflictResolutionStrategyAccess().getVariablesVariableParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__RuleAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictResolutionStrategyAccess().getRuleSatisfactionRuleParserRuleCall_9_0()); }
		ruleSatisfactionRule
		{ after(grammarAccess.getConflictResolutionStrategyAccess().getRuleSatisfactionRuleParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionStrategy__ResolutionStrategyAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictResolutionStrategyAccess().getResolutionStrategyResolutionStrategyParserRuleCall_13_0()); }
		ruleResolutionStrategy
		{ after(grammarAccess.getConflictResolutionStrategyAccess().getResolutionStrategyResolutionStrategyParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__PipelineAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getPipelinePipelineParserRuleCall_3_0()); }
		rulePipeline
		{ after(grammarAccess.getVariableAccess().getPipelinePipelineParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__FirstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineAccess().getFirstAlternatives_0_0()); }
		(rule__Pipeline__FirstAlternatives_0_0)
		{ after(grammarAccess.getPipelineAccess().getFirstAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__NextAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineAccess().getNextPipelineStageParserRuleCall_1_1_0()); }
		rulePipelineStage
		{ after(grammarAccess.getPipelineAccess().getNextPipelineStageParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageSrc__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0()); }
		(
			{ before(grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0()); }
			'#src'
			{ after(grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0()); }
		)
		{ after(grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineStageTrg__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0()); }
		(
			{ before(grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0()); }
			'#trg'
			{ after(grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0()); }
		)
		{ after(grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineCreatedFilterStage__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineCreatedFilterStageAccess().getNameCreatedKeyword_0()); }
		(
			{ before(grammarAccess.getPipelineCreatedFilterStageAccess().getNameCreatedKeyword_0()); }
			'created'
			{ after(grammarAccess.getPipelineCreatedFilterStageAccess().getNameCreatedKeyword_0()); }
		)
		{ after(grammarAccess.getPipelineCreatedFilterStageAccess().getNameCreatedKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineDeletedFilterStage__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineDeletedFilterStageAccess().getNameDeletedKeyword_0()); }
		(
			{ before(grammarAccess.getPipelineDeletedFilterStageAccess().getNameDeletedKeyword_0()); }
			'deleted'
			{ after(grammarAccess.getPipelineDeletedFilterStageAccess().getNameDeletedKeyword_0()); }
		)
		{ after(grammarAccess.getPipelineDeletedFilterStageAccess().getNameDeletedKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineTypeFilterStage__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineTypeFilterStageAccess().getNameTypeKeyword_0_0()); }
		(
			{ before(grammarAccess.getPipelineTypeFilterStageAccess().getNameTypeKeyword_0_0()); }
			'type'
			{ after(grammarAccess.getPipelineTypeFilterStageAccess().getNameTypeKeyword_0_0()); }
		)
		{ after(grammarAccess.getPipelineTypeFilterStageAccess().getNameTypeKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineTypeFilterStage__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineTypeFilterStageAccess().getTypeEClassifierCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPipelineTypeFilterStageAccess().getTypeEClassifierIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPipelineTypeFilterStageAccess().getTypeEClassifierIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPipelineTypeFilterStageAccess().getTypeEClassifierCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineCountStage__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineCountStageAccess().getNameCountKeyword_0()); }
		(
			{ before(grammarAccess.getPipelineCountStageAccess().getNameCountKeyword_0()); }
			'count'
			{ after(grammarAccess.getPipelineCountStageAccess().getNameCountKeyword_0()); }
		)
		{ after(grammarAccess.getPipelineCountStageAccess().getNameCountKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SatisfactionRule__FirstRuleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSatisfactionRuleAccess().getFirstRuleComparisonParserRuleCall_0_0()); }
		ruleComparison
		{ after(grammarAccess.getSatisfactionRuleAccess().getFirstRuleComparisonParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SatisfactionRule__OtherRulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSatisfactionRuleAccess().getOtherRulesAlternatives_1_0()); }
		(rule__SatisfactionRule__OtherRulesAlternatives_1_0)
		{ after(grammarAccess.getSatisfactionRuleAccess().getOtherRulesAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__V1Assignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getV1VariableCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getV1VariableIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComparisonAccess().getV1VariableIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getComparisonAccess().getV1VariableCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__N1Assignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getN1INTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getComparisonAccess().getN1INTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__C1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getC1Alternatives_1_0()); }
		(rule__Comparison__C1Alternatives_1_0)
		{ after(grammarAccess.getComparisonAccess().getC1Alternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__V2Assignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getV2VariableCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getV2VariableIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComparisonAccess().getV2VariableIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getComparisonAccess().getV2VariableCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__N2Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getN2INTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getComparisonAccess().getN2INTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolutionStrategy__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResolutionStrategyAccess().getNameAlternatives_0()); }
		(rule__ResolutionStrategy__NameAlternatives_0)
		{ after(grammarAccess.getResolutionStrategyAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
