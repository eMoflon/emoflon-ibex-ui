/**
 * generated by Xtext 2.27.0
 */
package org.emoflon.ibex.gt.editor.gT.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.emoflon.ibex.gt.editor.gT.AddExpression;
import org.emoflon.ibex.gt.editor.gT.AddOperator;
import org.emoflon.ibex.gt.editor.gT.AllOneParameterOperators;
import org.emoflon.ibex.gt.editor.gT.ArithmeticCalculationExpression;
import org.emoflon.ibex.gt.editor.gT.ArithmeticExpression;
import org.emoflon.ibex.gt.editor.gT.EditorApplicationCondition;
import org.emoflon.ibex.gt.editor.gT.EditorApplicationConditionType;
import org.emoflon.ibex.gt.editor.gT.EditorAttributeAssignment;
import org.emoflon.ibex.gt.editor.gT.EditorAttributeConstraint;
import org.emoflon.ibex.gt.editor.gT.EditorAttributeExpression;
import org.emoflon.ibex.gt.editor.gT.EditorCondition;
import org.emoflon.ibex.gt.editor.gT.EditorConditionReference;
import org.emoflon.ibex.gt.editor.gT.EditorCountExpression;
import org.emoflon.ibex.gt.editor.gT.EditorEnumExpression;
import org.emoflon.ibex.gt.editor.gT.EditorExpression;
import org.emoflon.ibex.gt.editor.gT.EditorGTFile;
import org.emoflon.ibex.gt.editor.gT.EditorImport;
import org.emoflon.ibex.gt.editor.gT.EditorIteratorAttributeAssignment;
import org.emoflon.ibex.gt.editor.gT.EditorIteratorAttributeAssignmentItr;
import org.emoflon.ibex.gt.editor.gT.EditorIteratorAttributeAssignmentNode;
import org.emoflon.ibex.gt.editor.gT.EditorIteratorAttributeExpression;
import org.emoflon.ibex.gt.editor.gT.EditorIteratorReference;
import org.emoflon.ibex.gt.editor.gT.EditorLiteralExpression;
import org.emoflon.ibex.gt.editor.gT.EditorNode;
import org.emoflon.ibex.gt.editor.gT.EditorOperator;
import org.emoflon.ibex.gt.editor.gT.EditorParameter;
import org.emoflon.ibex.gt.editor.gT.EditorParameterExpression;
import org.emoflon.ibex.gt.editor.gT.EditorParameterOrNode;
import org.emoflon.ibex.gt.editor.gT.EditorPattern;
import org.emoflon.ibex.gt.editor.gT.EditorPatternType;
import org.emoflon.ibex.gt.editor.gT.EditorProbability;
import org.emoflon.ibex.gt.editor.gT.EditorReference;
import org.emoflon.ibex.gt.editor.gT.EditorReferenceIterator;
import org.emoflon.ibex.gt.editor.gT.EditorRelation;
import org.emoflon.ibex.gt.editor.gT.EditorSimpleCondition;
import org.emoflon.ibex.gt.editor.gT.ExpExpression;
import org.emoflon.ibex.gt.editor.gT.GTFactory;
import org.emoflon.ibex.gt.editor.gT.GTPackage;
import org.emoflon.ibex.gt.editor.gT.MinMaxExpression;
import org.emoflon.ibex.gt.editor.gT.MinMaxOperator;
import org.emoflon.ibex.gt.editor.gT.MultExpression;
import org.emoflon.ibex.gt.editor.gT.MultOperator;
import org.emoflon.ibex.gt.editor.gT.OneParameterArithmetics;
import org.emoflon.ibex.gt.editor.gT.PossibleStochasticRanges;
import org.emoflon.ibex.gt.editor.gT.StochasticDistribution;
import org.emoflon.ibex.gt.editor.gT.StochasticFunction;
import org.emoflon.ibex.gt.editor.gT.StochasticFunctionExpression;
import org.emoflon.ibex.gt.editor.gT.StringConstant;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GTPackageImpl extends EPackageImpl implements GTPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorGTFileEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorParameterOrNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorImportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorParameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorAttributeConstraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorAttributeAssignmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorAttributeExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorCountExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorLiteralExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorEnumExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorParameterExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorReferenceIteratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorIteratorAttributeExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorIteratorAttributeAssignmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorIteratorAttributeAssignmentItrEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorIteratorAttributeAssignmentNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorIteratorReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorSimpleConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorProbabilityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stochasticFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stochasticFunctionExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arithmeticCalculationExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arithmeticExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorConditionReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass editorApplicationConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass multExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass minMaxExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass oneParameterArithmeticsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum editorPatternTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum editorOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum editorRelationEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum editorApplicationConditionTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum possibleStochasticRangesEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum stochasticDistributionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum multOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum minMaxOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum addOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum allOneParameterOperatorsEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.emoflon.ibex.gt.editor.gT.GTPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GTPackageImpl()
  {
    super(eNS_URI, GTFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link GTPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GTPackage init()
  {
    if (isInited) return (GTPackage)EPackage.Registry.INSTANCE.getEPackage(GTPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredGTPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    GTPackageImpl theGTPackage = registeredGTPackage instanceof GTPackageImpl ? (GTPackageImpl)registeredGTPackage : new GTPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theGTPackage.createPackageContents();

    // Initialize created meta-data
    theGTPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGTPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GTPackage.eNS_URI, theGTPackage);
    return theGTPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorGTFile()
  {
    return editorGTFileEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorGTFile_Imports()
  {
    return (EReference)editorGTFileEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorGTFile_Patterns()
  {
    return (EReference)editorGTFileEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorGTFile_Conditions()
  {
    return (EReference)editorGTFileEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorParameterOrNode()
  {
    return editorParameterOrNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorParameterOrNode_Name()
  {
    return (EAttribute)editorParameterOrNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorImport()
  {
    return editorImportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorImport_Name()
  {
    return (EAttribute)editorImportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorPattern()
  {
    return editorPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorPattern_Abstract()
  {
    return (EAttribute)editorPatternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorPattern_Type()
  {
    return (EAttribute)editorPatternEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorPattern_Name()
  {
    return (EAttribute)editorPatternEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorPattern_Parameters()
  {
    return (EReference)editorPatternEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorPattern_SuperPatterns()
  {
    return (EReference)editorPatternEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorPattern_Nodes()
  {
    return (EReference)editorPatternEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorPattern_AttributeConstraints()
  {
    return (EReference)editorPatternEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorPattern_Conditions()
  {
    return (EReference)editorPatternEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorPattern_Stochastic()
  {
    return (EAttribute)editorPatternEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorPattern_Probability()
  {
    return (EReference)editorPatternEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorParameter()
  {
    return editorParameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorParameter_Type()
  {
    return (EReference)editorParameterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorNode()
  {
    return editorNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorNode_Operator()
  {
    return (EAttribute)editorNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorNode_Local()
  {
    return (EAttribute)editorNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorNode_Type()
  {
    return (EReference)editorNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorNode_Attributes()
  {
    return (EReference)editorNodeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorNode_References()
  {
    return (EReference)editorNodeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorNode_Iterators()
  {
    return (EReference)editorNodeEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorAttributeConstraint()
  {
    return editorAttributeConstraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorAttributeConstraint_Lhs()
  {
    return (EReference)editorAttributeConstraintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorAttributeConstraint_Relation()
  {
    return (EAttribute)editorAttributeConstraintEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorAttributeConstraint_Rhs()
  {
    return (EReference)editorAttributeConstraintEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorAttributeAssignment()
  {
    return editorAttributeAssignmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorAttributeAssignment_Attribute()
  {
    return (EReference)editorAttributeAssignmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorAttributeAssignment_Value()
  {
    return (EReference)editorAttributeAssignmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorExpression()
  {
    return editorExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorAttributeExpression()
  {
    return editorAttributeExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorAttributeExpression_Node()
  {
    return (EReference)editorAttributeExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorAttributeExpression_Attribute()
  {
    return (EReference)editorAttributeExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorCountExpression()
  {
    return editorCountExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorCountExpression_InvokedPatten()
  {
    return (EReference)editorCountExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorLiteralExpression()
  {
    return editorLiteralExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorLiteralExpression_Value()
  {
    return (EAttribute)editorLiteralExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorEnumExpression()
  {
    return editorEnumExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorEnumExpression_Literal()
  {
    return (EReference)editorEnumExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorParameterExpression()
  {
    return editorParameterExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorParameterExpression_Parameter()
  {
    return (EReference)editorParameterExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorReference()
  {
    return editorReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorReference_Operator()
  {
    return (EAttribute)editorReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorReference_Type()
  {
    return (EReference)editorReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorReference_Target()
  {
    return (EReference)editorReferenceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorReferenceIterator()
  {
    return editorReferenceIteratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorReferenceIterator_Type()
  {
    return (EReference)editorReferenceIteratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorReferenceIterator_Name()
  {
    return (EAttribute)editorReferenceIteratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorReferenceIterator_SubType()
  {
    return (EReference)editorReferenceIteratorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorReferenceIterator_IteratorAttributes()
  {
    return (EReference)editorReferenceIteratorEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorReferenceIterator_References()
  {
    return (EReference)editorReferenceIteratorEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorIteratorAttributeExpression()
  {
    return editorIteratorAttributeExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorIteratorAttributeExpression_Iterator()
  {
    return (EReference)editorIteratorAttributeExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorIteratorAttributeExpression_Attribute()
  {
    return (EReference)editorIteratorAttributeExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorIteratorAttributeAssignment()
  {
    return editorIteratorAttributeAssignmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorIteratorAttributeAssignment_Value()
  {
    return (EReference)editorIteratorAttributeAssignmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorIteratorAttributeAssignmentItr()
  {
    return editorIteratorAttributeAssignmentItrEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorIteratorAttributeAssignmentItr_IteratorAttribute()
  {
    return (EReference)editorIteratorAttributeAssignmentItrEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorIteratorAttributeAssignmentNode()
  {
    return editorIteratorAttributeAssignmentNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorIteratorAttributeAssignmentNode_NodeAttribute()
  {
    return (EReference)editorIteratorAttributeAssignmentNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorIteratorReference()
  {
    return editorIteratorReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorIteratorReference_Operator()
  {
    return (EAttribute)editorIteratorReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorIteratorReference_Source()
  {
    return (EReference)editorIteratorReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorIteratorReference_Type()
  {
    return (EReference)editorIteratorReferenceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorIteratorReference_Target()
  {
    return (EReference)editorIteratorReferenceEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorCondition()
  {
    return editorConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorCondition_Name()
  {
    return (EAttribute)editorConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorCondition_Conditions()
  {
    return (EReference)editorConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorSimpleCondition()
  {
    return editorSimpleConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorProbability()
  {
    return editorProbabilityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStochasticFunction()
  {
    return stochasticFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStochasticFunction_FunctionExpression()
  {
    return (EReference)stochasticFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStochasticFunction_Parameter()
  {
    return (EReference)stochasticFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStochasticFunctionExpression()
  {
    return stochasticFunctionExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStochasticFunctionExpression_OperatorRange()
  {
    return (EAttribute)stochasticFunctionExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStochasticFunctionExpression_Distribution()
  {
    return (EAttribute)stochasticFunctionExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStochasticFunctionExpression_Mean()
  {
    return (EReference)stochasticFunctionExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStochasticFunctionExpression_HasSd()
  {
    return (EAttribute)stochasticFunctionExpressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStochasticFunctionExpression_Sd()
  {
    return (EReference)stochasticFunctionExpressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArithmeticCalculationExpression()
  {
    return arithmeticCalculationExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticCalculationExpression_Expression()
  {
    return (EReference)arithmeticCalculationExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArithmeticExpression()
  {
    return arithmeticExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringConstant()
  {
    return stringConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorConditionReference()
  {
    return editorConditionReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorConditionReference_Condition()
  {
    return (EReference)editorConditionReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEditorApplicationCondition()
  {
    return editorApplicationConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEditorApplicationCondition_Type()
  {
    return (EAttribute)editorApplicationConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEditorApplicationCondition_Pattern()
  {
    return (EReference)editorApplicationConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddExpression()
  {
    return addExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddExpression_Left()
  {
    return (EReference)addExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddExpression_AddOperator()
  {
    return (EAttribute)addExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAddExpression_Right()
  {
    return (EReference)addExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMultExpression()
  {
    return multExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMultExpression_Left()
  {
    return (EReference)multExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMultExpression_MultOperator()
  {
    return (EAttribute)multExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMultExpression_Right()
  {
    return (EReference)multExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExpExpression()
  {
    return expExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpExpression_Left()
  {
    return (EReference)expExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpExpression_Right()
  {
    return (EReference)expExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMinMaxExpression()
  {
    return minMaxExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMinMaxExpression_MinMaxOperator()
  {
    return (EAttribute)minMaxExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMinMaxExpression_Left()
  {
    return (EReference)minMaxExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMinMaxExpression_Right()
  {
    return (EReference)minMaxExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOneParameterArithmetics()
  {
    return oneParameterArithmeticsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOneParameterArithmetics_Negative()
  {
    return (EAttribute)oneParameterArithmeticsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOneParameterArithmetics_Operator()
  {
    return (EAttribute)oneParameterArithmeticsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOneParameterArithmetics_Expression()
  {
    return (EReference)oneParameterArithmeticsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEditorPatternType()
  {
    return editorPatternTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEditorOperator()
  {
    return editorOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEditorRelation()
  {
    return editorRelationEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEditorApplicationConditionType()
  {
    return editorApplicationConditionTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getPossibleStochasticRanges()
  {
    return possibleStochasticRangesEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getStochasticDistribution()
  {
    return stochasticDistributionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMultOperator()
  {
    return multOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMinMaxOperator()
  {
    return minMaxOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getAddOperator()
  {
    return addOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getAllOneParameterOperators()
  {
    return allOneParameterOperatorsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GTFactory getGTFactory()
  {
    return (GTFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    editorGTFileEClass = createEClass(EDITOR_GT_FILE);
    createEReference(editorGTFileEClass, EDITOR_GT_FILE__IMPORTS);
    createEReference(editorGTFileEClass, EDITOR_GT_FILE__PATTERNS);
    createEReference(editorGTFileEClass, EDITOR_GT_FILE__CONDITIONS);

    editorParameterOrNodeEClass = createEClass(EDITOR_PARAMETER_OR_NODE);
    createEAttribute(editorParameterOrNodeEClass, EDITOR_PARAMETER_OR_NODE__NAME);

    editorImportEClass = createEClass(EDITOR_IMPORT);
    createEAttribute(editorImportEClass, EDITOR_IMPORT__NAME);

    editorPatternEClass = createEClass(EDITOR_PATTERN);
    createEAttribute(editorPatternEClass, EDITOR_PATTERN__ABSTRACT);
    createEAttribute(editorPatternEClass, EDITOR_PATTERN__TYPE);
    createEAttribute(editorPatternEClass, EDITOR_PATTERN__NAME);
    createEReference(editorPatternEClass, EDITOR_PATTERN__PARAMETERS);
    createEReference(editorPatternEClass, EDITOR_PATTERN__SUPER_PATTERNS);
    createEReference(editorPatternEClass, EDITOR_PATTERN__NODES);
    createEReference(editorPatternEClass, EDITOR_PATTERN__ATTRIBUTE_CONSTRAINTS);
    createEReference(editorPatternEClass, EDITOR_PATTERN__CONDITIONS);
    createEAttribute(editorPatternEClass, EDITOR_PATTERN__STOCHASTIC);
    createEReference(editorPatternEClass, EDITOR_PATTERN__PROBABILITY);

    editorParameterEClass = createEClass(EDITOR_PARAMETER);
    createEReference(editorParameterEClass, EDITOR_PARAMETER__TYPE);

    editorNodeEClass = createEClass(EDITOR_NODE);
    createEAttribute(editorNodeEClass, EDITOR_NODE__OPERATOR);
    createEAttribute(editorNodeEClass, EDITOR_NODE__LOCAL);
    createEReference(editorNodeEClass, EDITOR_NODE__TYPE);
    createEReference(editorNodeEClass, EDITOR_NODE__ATTRIBUTES);
    createEReference(editorNodeEClass, EDITOR_NODE__REFERENCES);
    createEReference(editorNodeEClass, EDITOR_NODE__ITERATORS);

    editorAttributeConstraintEClass = createEClass(EDITOR_ATTRIBUTE_CONSTRAINT);
    createEReference(editorAttributeConstraintEClass, EDITOR_ATTRIBUTE_CONSTRAINT__LHS);
    createEAttribute(editorAttributeConstraintEClass, EDITOR_ATTRIBUTE_CONSTRAINT__RELATION);
    createEReference(editorAttributeConstraintEClass, EDITOR_ATTRIBUTE_CONSTRAINT__RHS);

    editorAttributeAssignmentEClass = createEClass(EDITOR_ATTRIBUTE_ASSIGNMENT);
    createEReference(editorAttributeAssignmentEClass, EDITOR_ATTRIBUTE_ASSIGNMENT__ATTRIBUTE);
    createEReference(editorAttributeAssignmentEClass, EDITOR_ATTRIBUTE_ASSIGNMENT__VALUE);

    editorExpressionEClass = createEClass(EDITOR_EXPRESSION);

    editorAttributeExpressionEClass = createEClass(EDITOR_ATTRIBUTE_EXPRESSION);
    createEReference(editorAttributeExpressionEClass, EDITOR_ATTRIBUTE_EXPRESSION__NODE);
    createEReference(editorAttributeExpressionEClass, EDITOR_ATTRIBUTE_EXPRESSION__ATTRIBUTE);

    editorCountExpressionEClass = createEClass(EDITOR_COUNT_EXPRESSION);
    createEReference(editorCountExpressionEClass, EDITOR_COUNT_EXPRESSION__INVOKED_PATTEN);

    editorLiteralExpressionEClass = createEClass(EDITOR_LITERAL_EXPRESSION);
    createEAttribute(editorLiteralExpressionEClass, EDITOR_LITERAL_EXPRESSION__VALUE);

    editorEnumExpressionEClass = createEClass(EDITOR_ENUM_EXPRESSION);
    createEReference(editorEnumExpressionEClass, EDITOR_ENUM_EXPRESSION__LITERAL);

    editorParameterExpressionEClass = createEClass(EDITOR_PARAMETER_EXPRESSION);
    createEReference(editorParameterExpressionEClass, EDITOR_PARAMETER_EXPRESSION__PARAMETER);

    editorReferenceEClass = createEClass(EDITOR_REFERENCE);
    createEAttribute(editorReferenceEClass, EDITOR_REFERENCE__OPERATOR);
    createEReference(editorReferenceEClass, EDITOR_REFERENCE__TYPE);
    createEReference(editorReferenceEClass, EDITOR_REFERENCE__TARGET);

    editorReferenceIteratorEClass = createEClass(EDITOR_REFERENCE_ITERATOR);
    createEReference(editorReferenceIteratorEClass, EDITOR_REFERENCE_ITERATOR__TYPE);
    createEAttribute(editorReferenceIteratorEClass, EDITOR_REFERENCE_ITERATOR__NAME);
    createEReference(editorReferenceIteratorEClass, EDITOR_REFERENCE_ITERATOR__SUB_TYPE);
    createEReference(editorReferenceIteratorEClass, EDITOR_REFERENCE_ITERATOR__ITERATOR_ATTRIBUTES);
    createEReference(editorReferenceIteratorEClass, EDITOR_REFERENCE_ITERATOR__REFERENCES);

    editorIteratorAttributeExpressionEClass = createEClass(EDITOR_ITERATOR_ATTRIBUTE_EXPRESSION);
    createEReference(editorIteratorAttributeExpressionEClass, EDITOR_ITERATOR_ATTRIBUTE_EXPRESSION__ITERATOR);
    createEReference(editorIteratorAttributeExpressionEClass, EDITOR_ITERATOR_ATTRIBUTE_EXPRESSION__ATTRIBUTE);

    editorIteratorAttributeAssignmentEClass = createEClass(EDITOR_ITERATOR_ATTRIBUTE_ASSIGNMENT);
    createEReference(editorIteratorAttributeAssignmentEClass, EDITOR_ITERATOR_ATTRIBUTE_ASSIGNMENT__VALUE);

    editorIteratorAttributeAssignmentItrEClass = createEClass(EDITOR_ITERATOR_ATTRIBUTE_ASSIGNMENT_ITR);
    createEReference(editorIteratorAttributeAssignmentItrEClass, EDITOR_ITERATOR_ATTRIBUTE_ASSIGNMENT_ITR__ITERATOR_ATTRIBUTE);

    editorIteratorAttributeAssignmentNodeEClass = createEClass(EDITOR_ITERATOR_ATTRIBUTE_ASSIGNMENT_NODE);
    createEReference(editorIteratorAttributeAssignmentNodeEClass, EDITOR_ITERATOR_ATTRIBUTE_ASSIGNMENT_NODE__NODE_ATTRIBUTE);

    editorIteratorReferenceEClass = createEClass(EDITOR_ITERATOR_REFERENCE);
    createEAttribute(editorIteratorReferenceEClass, EDITOR_ITERATOR_REFERENCE__OPERATOR);
    createEReference(editorIteratorReferenceEClass, EDITOR_ITERATOR_REFERENCE__SOURCE);
    createEReference(editorIteratorReferenceEClass, EDITOR_ITERATOR_REFERENCE__TYPE);
    createEReference(editorIteratorReferenceEClass, EDITOR_ITERATOR_REFERENCE__TARGET);

    editorConditionEClass = createEClass(EDITOR_CONDITION);
    createEAttribute(editorConditionEClass, EDITOR_CONDITION__NAME);
    createEReference(editorConditionEClass, EDITOR_CONDITION__CONDITIONS);

    editorSimpleConditionEClass = createEClass(EDITOR_SIMPLE_CONDITION);

    editorProbabilityEClass = createEClass(EDITOR_PROBABILITY);

    stochasticFunctionEClass = createEClass(STOCHASTIC_FUNCTION);
    createEReference(stochasticFunctionEClass, STOCHASTIC_FUNCTION__FUNCTION_EXPRESSION);
    createEReference(stochasticFunctionEClass, STOCHASTIC_FUNCTION__PARAMETER);

    stochasticFunctionExpressionEClass = createEClass(STOCHASTIC_FUNCTION_EXPRESSION);
    createEAttribute(stochasticFunctionExpressionEClass, STOCHASTIC_FUNCTION_EXPRESSION__OPERATOR_RANGE);
    createEAttribute(stochasticFunctionExpressionEClass, STOCHASTIC_FUNCTION_EXPRESSION__DISTRIBUTION);
    createEReference(stochasticFunctionExpressionEClass, STOCHASTIC_FUNCTION_EXPRESSION__MEAN);
    createEAttribute(stochasticFunctionExpressionEClass, STOCHASTIC_FUNCTION_EXPRESSION__HAS_SD);
    createEReference(stochasticFunctionExpressionEClass, STOCHASTIC_FUNCTION_EXPRESSION__SD);

    arithmeticCalculationExpressionEClass = createEClass(ARITHMETIC_CALCULATION_EXPRESSION);
    createEReference(arithmeticCalculationExpressionEClass, ARITHMETIC_CALCULATION_EXPRESSION__EXPRESSION);

    arithmeticExpressionEClass = createEClass(ARITHMETIC_EXPRESSION);

    stringConstantEClass = createEClass(STRING_CONSTANT);

    editorConditionReferenceEClass = createEClass(EDITOR_CONDITION_REFERENCE);
    createEReference(editorConditionReferenceEClass, EDITOR_CONDITION_REFERENCE__CONDITION);

    editorApplicationConditionEClass = createEClass(EDITOR_APPLICATION_CONDITION);
    createEAttribute(editorApplicationConditionEClass, EDITOR_APPLICATION_CONDITION__TYPE);
    createEReference(editorApplicationConditionEClass, EDITOR_APPLICATION_CONDITION__PATTERN);

    addExpressionEClass = createEClass(ADD_EXPRESSION);
    createEReference(addExpressionEClass, ADD_EXPRESSION__LEFT);
    createEAttribute(addExpressionEClass, ADD_EXPRESSION__ADD_OPERATOR);
    createEReference(addExpressionEClass, ADD_EXPRESSION__RIGHT);

    multExpressionEClass = createEClass(MULT_EXPRESSION);
    createEReference(multExpressionEClass, MULT_EXPRESSION__LEFT);
    createEAttribute(multExpressionEClass, MULT_EXPRESSION__MULT_OPERATOR);
    createEReference(multExpressionEClass, MULT_EXPRESSION__RIGHT);

    expExpressionEClass = createEClass(EXP_EXPRESSION);
    createEReference(expExpressionEClass, EXP_EXPRESSION__LEFT);
    createEReference(expExpressionEClass, EXP_EXPRESSION__RIGHT);

    minMaxExpressionEClass = createEClass(MIN_MAX_EXPRESSION);
    createEAttribute(minMaxExpressionEClass, MIN_MAX_EXPRESSION__MIN_MAX_OPERATOR);
    createEReference(minMaxExpressionEClass, MIN_MAX_EXPRESSION__LEFT);
    createEReference(minMaxExpressionEClass, MIN_MAX_EXPRESSION__RIGHT);

    oneParameterArithmeticsEClass = createEClass(ONE_PARAMETER_ARITHMETICS);
    createEAttribute(oneParameterArithmeticsEClass, ONE_PARAMETER_ARITHMETICS__NEGATIVE);
    createEAttribute(oneParameterArithmeticsEClass, ONE_PARAMETER_ARITHMETICS__OPERATOR);
    createEReference(oneParameterArithmeticsEClass, ONE_PARAMETER_ARITHMETICS__EXPRESSION);

    // Create enums
    editorPatternTypeEEnum = createEEnum(EDITOR_PATTERN_TYPE);
    editorOperatorEEnum = createEEnum(EDITOR_OPERATOR);
    editorRelationEEnum = createEEnum(EDITOR_RELATION);
    editorApplicationConditionTypeEEnum = createEEnum(EDITOR_APPLICATION_CONDITION_TYPE);
    possibleStochasticRangesEEnum = createEEnum(POSSIBLE_STOCHASTIC_RANGES);
    stochasticDistributionEEnum = createEEnum(STOCHASTIC_DISTRIBUTION);
    multOperatorEEnum = createEEnum(MULT_OPERATOR);
    minMaxOperatorEEnum = createEEnum(MIN_MAX_OPERATOR);
    addOperatorEEnum = createEEnum(ADD_OPERATOR);
    allOneParameterOperatorsEEnum = createEEnum(ALL_ONE_PARAMETER_OPERATORS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    editorParameterEClass.getESuperTypes().add(this.getEditorParameterOrNode());
    editorNodeEClass.getESuperTypes().add(this.getEditorParameterOrNode());
    editorAttributeExpressionEClass.getESuperTypes().add(this.getArithmeticExpression());
    editorCountExpressionEClass.getESuperTypes().add(this.getArithmeticExpression());
    editorLiteralExpressionEClass.getESuperTypes().add(this.getArithmeticExpression());
    editorEnumExpressionEClass.getESuperTypes().add(this.getEditorExpression());
    editorParameterExpressionEClass.getESuperTypes().add(this.getEditorExpression());
    editorIteratorAttributeExpressionEClass.getESuperTypes().add(this.getArithmeticExpression());
    editorIteratorAttributeAssignmentItrEClass.getESuperTypes().add(this.getEditorIteratorAttributeAssignment());
    editorIteratorAttributeAssignmentNodeEClass.getESuperTypes().add(this.getEditorIteratorAttributeAssignment());
    stochasticFunctionEClass.getESuperTypes().add(this.getEditorProbability());
    stochasticFunctionExpressionEClass.getESuperTypes().add(this.getEditorExpression());
    arithmeticCalculationExpressionEClass.getESuperTypes().add(this.getEditorExpression());
    arithmeticExpressionEClass.getESuperTypes().add(this.getEditorProbability());
    stringConstantEClass.getESuperTypes().add(this.getEditorLiteralExpression());
    editorConditionReferenceEClass.getESuperTypes().add(this.getEditorSimpleCondition());
    editorApplicationConditionEClass.getESuperTypes().add(this.getEditorSimpleCondition());
    addExpressionEClass.getESuperTypes().add(this.getArithmeticExpression());
    multExpressionEClass.getESuperTypes().add(this.getArithmeticExpression());
    expExpressionEClass.getESuperTypes().add(this.getArithmeticExpression());
    minMaxExpressionEClass.getESuperTypes().add(this.getArithmeticExpression());
    oneParameterArithmeticsEClass.getESuperTypes().add(this.getArithmeticExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(editorGTFileEClass, EditorGTFile.class, "EditorGTFile", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorGTFile_Imports(), this.getEditorImport(), null, "imports", null, 0, -1, EditorGTFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorGTFile_Patterns(), this.getEditorPattern(), null, "patterns", null, 0, -1, EditorGTFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorGTFile_Conditions(), this.getEditorCondition(), null, "conditions", null, 0, -1, EditorGTFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorParameterOrNodeEClass, EditorParameterOrNode.class, "EditorParameterOrNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorParameterOrNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, EditorParameterOrNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorImportEClass, EditorImport.class, "EditorImport", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorImport_Name(), ecorePackage.getEString(), "name", null, 0, 1, EditorImport.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorPatternEClass, EditorPattern.class, "EditorPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorPattern_Abstract(), ecorePackage.getEBoolean(), "abstract", null, 0, 1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEditorPattern_Type(), this.getEditorPatternType(), "type", null, 0, 1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEditorPattern_Name(), ecorePackage.getEString(), "name", null, 0, 1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorPattern_Parameters(), this.getEditorParameter(), null, "parameters", null, 0, -1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorPattern_SuperPatterns(), this.getEditorPattern(), null, "superPatterns", null, 0, -1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorPattern_Nodes(), this.getEditorNode(), null, "nodes", null, 0, -1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorPattern_AttributeConstraints(), this.getEditorAttributeConstraint(), null, "attributeConstraints", null, 0, -1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorPattern_Conditions(), this.getEditorCondition(), null, "conditions", null, 0, -1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEditorPattern_Stochastic(), ecorePackage.getEBoolean(), "stochastic", null, 0, 1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorPattern_Probability(), this.getEditorProbability(), null, "probability", null, 0, 1, EditorPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorParameterEClass, EditorParameter.class, "EditorParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorParameter_Type(), ecorePackage.getEDataType(), null, "type", null, 0, 1, EditorParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorNodeEClass, EditorNode.class, "EditorNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorNode_Operator(), this.getEditorOperator(), "operator", null, 0, 1, EditorNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEditorNode_Local(), ecorePackage.getEBoolean(), "local", null, 0, 1, EditorNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorNode_Type(), ecorePackage.getEClass(), null, "type", null, 0, 1, EditorNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorNode_Attributes(), this.getEditorAttributeAssignment(), null, "attributes", null, 0, -1, EditorNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorNode_References(), this.getEditorReference(), null, "references", null, 0, -1, EditorNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorNode_Iterators(), this.getEditorReferenceIterator(), null, "iterators", null, 0, -1, EditorNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorAttributeConstraintEClass, EditorAttributeConstraint.class, "EditorAttributeConstraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorAttributeConstraint_Lhs(), this.getEditorExpression(), null, "lhs", null, 0, 1, EditorAttributeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEditorAttributeConstraint_Relation(), this.getEditorRelation(), "relation", null, 0, 1, EditorAttributeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorAttributeConstraint_Rhs(), this.getEditorExpression(), null, "rhs", null, 0, 1, EditorAttributeConstraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorAttributeAssignmentEClass, EditorAttributeAssignment.class, "EditorAttributeAssignment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorAttributeAssignment_Attribute(), ecorePackage.getEAttribute(), null, "attribute", null, 0, 1, EditorAttributeAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorAttributeAssignment_Value(), this.getEditorExpression(), null, "value", null, 0, 1, EditorAttributeAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorExpressionEClass, EditorExpression.class, "EditorExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(editorAttributeExpressionEClass, EditorAttributeExpression.class, "EditorAttributeExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorAttributeExpression_Node(), this.getEditorNode(), null, "node", null, 0, 1, EditorAttributeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorAttributeExpression_Attribute(), ecorePackage.getEAttribute(), null, "attribute", null, 0, 1, EditorAttributeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorCountExpressionEClass, EditorCountExpression.class, "EditorCountExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorCountExpression_InvokedPatten(), this.getEditorPattern(), null, "invokedPatten", null, 0, 1, EditorCountExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorLiteralExpressionEClass, EditorLiteralExpression.class, "EditorLiteralExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorLiteralExpression_Value(), ecorePackage.getEString(), "value", null, 0, 1, EditorLiteralExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorEnumExpressionEClass, EditorEnumExpression.class, "EditorEnumExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorEnumExpression_Literal(), ecorePackage.getEEnumLiteral(), null, "literal", null, 0, 1, EditorEnumExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorParameterExpressionEClass, EditorParameterExpression.class, "EditorParameterExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorParameterExpression_Parameter(), this.getEditorParameter(), null, "parameter", null, 0, 1, EditorParameterExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorReferenceEClass, EditorReference.class, "EditorReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorReference_Operator(), this.getEditorOperator(), "operator", null, 0, 1, EditorReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorReference_Type(), ecorePackage.getEReference(), null, "type", null, 0, 1, EditorReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorReference_Target(), this.getEditorNode(), null, "target", null, 0, 1, EditorReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorReferenceIteratorEClass, EditorReferenceIterator.class, "EditorReferenceIterator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorReferenceIterator_Type(), ecorePackage.getEReference(), null, "type", null, 0, 1, EditorReferenceIterator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEditorReferenceIterator_Name(), ecorePackage.getEString(), "name", null, 0, 1, EditorReferenceIterator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorReferenceIterator_SubType(), ecorePackage.getEClass(), null, "subType", null, 0, 1, EditorReferenceIterator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorReferenceIterator_IteratorAttributes(), this.getEditorIteratorAttributeAssignment(), null, "iteratorAttributes", null, 0, -1, EditorReferenceIterator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorReferenceIterator_References(), this.getEditorIteratorReference(), null, "references", null, 0, -1, EditorReferenceIterator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorIteratorAttributeExpressionEClass, EditorIteratorAttributeExpression.class, "EditorIteratorAttributeExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorIteratorAttributeExpression_Iterator(), this.getEditorReferenceIterator(), null, "iterator", null, 0, 1, EditorIteratorAttributeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorIteratorAttributeExpression_Attribute(), ecorePackage.getEAttribute(), null, "attribute", null, 0, 1, EditorIteratorAttributeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorIteratorAttributeAssignmentEClass, EditorIteratorAttributeAssignment.class, "EditorIteratorAttributeAssignment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorIteratorAttributeAssignment_Value(), this.getEditorExpression(), null, "value", null, 0, 1, EditorIteratorAttributeAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorIteratorAttributeAssignmentItrEClass, EditorIteratorAttributeAssignmentItr.class, "EditorIteratorAttributeAssignmentItr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorIteratorAttributeAssignmentItr_IteratorAttribute(), this.getEditorIteratorAttributeExpression(), null, "iteratorAttribute", null, 0, 1, EditorIteratorAttributeAssignmentItr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorIteratorAttributeAssignmentNodeEClass, EditorIteratorAttributeAssignmentNode.class, "EditorIteratorAttributeAssignmentNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorIteratorAttributeAssignmentNode_NodeAttribute(), this.getEditorAttributeExpression(), null, "nodeAttribute", null, 0, 1, EditorIteratorAttributeAssignmentNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorIteratorReferenceEClass, EditorIteratorReference.class, "EditorIteratorReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorIteratorReference_Operator(), this.getEditorOperator(), "operator", null, 0, 1, EditorIteratorReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorIteratorReference_Source(), this.getEditorNode(), null, "source", null, 0, 1, EditorIteratorReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorIteratorReference_Type(), ecorePackage.getEReference(), null, "type", null, 0, 1, EditorIteratorReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorIteratorReference_Target(), this.getEditorReferenceIterator(), null, "target", null, 0, 1, EditorIteratorReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorConditionEClass, EditorCondition.class, "EditorCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorCondition_Name(), ecorePackage.getEString(), "name", null, 0, 1, EditorCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorCondition_Conditions(), this.getEditorSimpleCondition(), null, "conditions", null, 0, -1, EditorCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorSimpleConditionEClass, EditorSimpleCondition.class, "EditorSimpleCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(editorProbabilityEClass, EditorProbability.class, "EditorProbability", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stochasticFunctionEClass, StochasticFunction.class, "StochasticFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStochasticFunction_FunctionExpression(), this.getStochasticFunctionExpression(), null, "functionExpression", null, 0, 1, StochasticFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStochasticFunction_Parameter(), this.getArithmeticExpression(), null, "parameter", null, 0, 1, StochasticFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stochasticFunctionExpressionEClass, StochasticFunctionExpression.class, "StochasticFunctionExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStochasticFunctionExpression_OperatorRange(), this.getPossibleStochasticRanges(), "operatorRange", null, 0, 1, StochasticFunctionExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStochasticFunctionExpression_Distribution(), this.getStochasticDistribution(), "distribution", null, 0, 1, StochasticFunctionExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStochasticFunctionExpression_Mean(), this.getArithmeticExpression(), null, "mean", null, 0, 1, StochasticFunctionExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStochasticFunctionExpression_HasSd(), ecorePackage.getEBoolean(), "hasSd", null, 0, 1, StochasticFunctionExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStochasticFunctionExpression_Sd(), this.getArithmeticExpression(), null, "sd", null, 0, 1, StochasticFunctionExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(arithmeticCalculationExpressionEClass, ArithmeticCalculationExpression.class, "ArithmeticCalculationExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArithmeticCalculationExpression_Expression(), this.getArithmeticExpression(), null, "expression", null, 0, 1, ArithmeticCalculationExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(arithmeticExpressionEClass, ArithmeticExpression.class, "ArithmeticExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stringConstantEClass, StringConstant.class, "StringConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(editorConditionReferenceEClass, EditorConditionReference.class, "EditorConditionReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEditorConditionReference_Condition(), this.getEditorCondition(), null, "condition", null, 0, 1, EditorConditionReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(editorApplicationConditionEClass, EditorApplicationCondition.class, "EditorApplicationCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEditorApplicationCondition_Type(), this.getEditorApplicationConditionType(), "type", null, 0, 1, EditorApplicationCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEditorApplicationCondition_Pattern(), this.getEditorPattern(), null, "pattern", null, 0, 1, EditorApplicationCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addExpressionEClass, AddExpression.class, "AddExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAddExpression_Left(), this.getArithmeticExpression(), null, "left", null, 0, 1, AddExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAddExpression_AddOperator(), this.getAddOperator(), "addOperator", null, 0, 1, AddExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAddExpression_Right(), this.getArithmeticExpression(), null, "right", null, 0, 1, AddExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(multExpressionEClass, MultExpression.class, "MultExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMultExpression_Left(), this.getArithmeticExpression(), null, "left", null, 0, 1, MultExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMultExpression_MultOperator(), this.getMultOperator(), "multOperator", null, 0, 1, MultExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMultExpression_Right(), this.getArithmeticExpression(), null, "right", null, 0, 1, MultExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expExpressionEClass, ExpExpression.class, "ExpExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExpExpression_Left(), this.getArithmeticExpression(), null, "left", null, 0, 1, ExpExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExpExpression_Right(), this.getArithmeticExpression(), null, "right", null, 0, 1, ExpExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(minMaxExpressionEClass, MinMaxExpression.class, "MinMaxExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMinMaxExpression_MinMaxOperator(), this.getMinMaxOperator(), "minMaxOperator", null, 0, 1, MinMaxExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMinMaxExpression_Left(), this.getArithmeticExpression(), null, "left", null, 0, 1, MinMaxExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMinMaxExpression_Right(), this.getArithmeticExpression(), null, "right", null, 0, 1, MinMaxExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(oneParameterArithmeticsEClass, OneParameterArithmetics.class, "OneParameterArithmetics", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOneParameterArithmetics_Negative(), ecorePackage.getEBoolean(), "negative", null, 0, 1, OneParameterArithmetics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getOneParameterArithmetics_Operator(), this.getAllOneParameterOperators(), "operator", null, 0, 1, OneParameterArithmetics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOneParameterArithmetics_Expression(), this.getArithmeticExpression(), null, "expression", null, 0, 1, OneParameterArithmetics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(editorPatternTypeEEnum, EditorPatternType.class, "EditorPatternType");
    addEEnumLiteral(editorPatternTypeEEnum, EditorPatternType.PATTERN);
    addEEnumLiteral(editorPatternTypeEEnum, EditorPatternType.RULE);

    initEEnum(editorOperatorEEnum, EditorOperator.class, "EditorOperator");
    addEEnumLiteral(editorOperatorEEnum, EditorOperator.CONTEXT);
    addEEnumLiteral(editorOperatorEEnum, EditorOperator.CREATE);
    addEEnumLiteral(editorOperatorEEnum, EditorOperator.DELETE);

    initEEnum(editorRelationEEnum, EditorRelation.class, "EditorRelation");
    addEEnumLiteral(editorRelationEEnum, EditorRelation.GREATER);
    addEEnumLiteral(editorRelationEEnum, EditorRelation.GREATER_OR_EQUAL);
    addEEnumLiteral(editorRelationEEnum, EditorRelation.EQUAL);
    addEEnumLiteral(editorRelationEEnum, EditorRelation.UNEQUAL);
    addEEnumLiteral(editorRelationEEnum, EditorRelation.SMALLER_OR_EQUAL);
    addEEnumLiteral(editorRelationEEnum, EditorRelation.SMALLER);

    initEEnum(editorApplicationConditionTypeEEnum, EditorApplicationConditionType.class, "EditorApplicationConditionType");
    addEEnumLiteral(editorApplicationConditionTypeEEnum, EditorApplicationConditionType.POSITIVE);
    addEEnumLiteral(editorApplicationConditionTypeEEnum, EditorApplicationConditionType.NEGATIVE);

    initEEnum(possibleStochasticRangesEEnum, PossibleStochasticRanges.class, "PossibleStochasticRanges");
    addEEnumLiteral(possibleStochasticRangesEEnum, PossibleStochasticRanges.NEUTRAL);
    addEEnumLiteral(possibleStochasticRangesEEnum, PossibleStochasticRanges.POSITIVE);
    addEEnumLiteral(possibleStochasticRangesEEnum, PossibleStochasticRanges.NEGATIVE);

    initEEnum(stochasticDistributionEEnum, StochasticDistribution.class, "StochasticDistribution");
    addEEnumLiteral(stochasticDistributionEEnum, StochasticDistribution.NORMAL);
    addEEnumLiteral(stochasticDistributionEEnum, StochasticDistribution.UNIFORM);
    addEEnumLiteral(stochasticDistributionEEnum, StochasticDistribution.EXPONENTIAL);

    initEEnum(multOperatorEEnum, MultOperator.class, "MultOperator");
    addEEnumLiteral(multOperatorEEnum, MultOperator.MULTIPLICATION);
    addEEnumLiteral(multOperatorEEnum, MultOperator.DIVISION);
    addEEnumLiteral(multOperatorEEnum, MultOperator.MODULO);

    initEEnum(minMaxOperatorEEnum, MinMaxOperator.class, "MinMaxOperator");
    addEEnumLiteral(minMaxOperatorEEnum, MinMaxOperator.MIN);
    addEEnumLiteral(minMaxOperatorEEnum, MinMaxOperator.MAX);

    initEEnum(addOperatorEEnum, AddOperator.class, "AddOperator");
    addEEnumLiteral(addOperatorEEnum, AddOperator.ADDITION);
    addEEnumLiteral(addOperatorEEnum, AddOperator.SUBTRACTION);

    initEEnum(allOneParameterOperatorsEEnum, AllOneParameterOperators.class, "AllOneParameterOperators");
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.BRACKET);
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.ROOT);
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.ABSOLUTE);
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.SIN);
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.COS);
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.TAN);
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.EEXPONENTIAL);
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.LOGARITHMUS);
    addEEnumLiteral(allOneParameterOperatorsEEnum, AllOneParameterOperators.NAT_LOG);

    // Create resource
    createResource(eNS_URI);
  }

} //GTPackageImpl
