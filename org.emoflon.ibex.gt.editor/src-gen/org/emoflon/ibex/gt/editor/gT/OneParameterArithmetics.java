/**
 * generated by Xtext 2.25.0
 */
package org.emoflon.ibex.gt.editor.gT;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>One Parameter Arithmetics</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.emoflon.ibex.gt.editor.gT.OneParameterArithmetics#isNegative <em>Negative</em>}</li>
 *   <li>{@link org.emoflon.ibex.gt.editor.gT.OneParameterArithmetics#getOperator <em>Operator</em>}</li>
 *   <li>{@link org.emoflon.ibex.gt.editor.gT.OneParameterArithmetics#getExpression <em>Expression</em>}</li>
 * </ul>
 *
 * @see org.emoflon.ibex.gt.editor.gT.GTPackage#getOneParameterArithmetics()
 * @model
 * @generated
 */
public interface OneParameterArithmetics extends ArithmeticExpression
{
  /**
   * Returns the value of the '<em><b>Negative</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Negative</em>' attribute.
   * @see #setNegative(boolean)
   * @see org.emoflon.ibex.gt.editor.gT.GTPackage#getOneParameterArithmetics_Negative()
   * @model
   * @generated
   */
  boolean isNegative();

  /**
   * Sets the value of the '{@link org.emoflon.ibex.gt.editor.gT.OneParameterArithmetics#isNegative <em>Negative</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Negative</em>' attribute.
   * @see #isNegative()
   * @generated
   */
  void setNegative(boolean value);

  /**
   * Returns the value of the '<em><b>Operator</b></em>' attribute.
   * The literals are from the enumeration {@link org.emoflon.ibex.gt.editor.gT.AllOneParameterOperators}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Operator</em>' attribute.
   * @see org.emoflon.ibex.gt.editor.gT.AllOneParameterOperators
   * @see #setOperator(AllOneParameterOperators)
   * @see org.emoflon.ibex.gt.editor.gT.GTPackage#getOneParameterArithmetics_Operator()
   * @model
   * @generated
   */
  AllOneParameterOperators getOperator();

  /**
   * Sets the value of the '{@link org.emoflon.ibex.gt.editor.gT.OneParameterArithmetics#getOperator <em>Operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Operator</em>' attribute.
   * @see org.emoflon.ibex.gt.editor.gT.AllOneParameterOperators
   * @see #getOperator()
   * @generated
   */
  void setOperator(AllOneParameterOperators value);

  /**
   * Returns the value of the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression</em>' containment reference.
   * @see #setExpression(ArithmeticExpression)
   * @see org.emoflon.ibex.gt.editor.gT.GTPackage#getOneParameterArithmetics_Expression()
   * @model containment="true"
   * @generated
   */
  ArithmeticExpression getExpression();

  /**
   * Sets the value of the '{@link org.emoflon.ibex.gt.editor.gT.OneParameterArithmetics#getExpression <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression</em>' containment reference.
   * @see #getExpression()
   * @generated
   */
  void setExpression(ArithmeticExpression value);

} // OneParameterArithmetics
