/**
 * generated by Xtext 2.26.0
 */
package org.emoflon.ibex.tgg.integrate.integrate.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.emoflon.ibex.tgg.editor.tgg.TggPackage;

import org.emoflon.ibex.tgg.integrate.integrate.AndExpression;
import org.emoflon.ibex.tgg.integrate.integrate.BooleanExpression;
import org.emoflon.ibex.tgg.integrate.integrate.ComparisonExpression;
import org.emoflon.ibex.tgg.integrate.integrate.ComparisonParameter;
import org.emoflon.ibex.tgg.integrate.integrate.ConflictResolutionSpecification;
import org.emoflon.ibex.tgg.integrate.integrate.ContinueResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.DeleteCorrespondencesResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.Expression;
import org.emoflon.ibex.tgg.integrate.integrate.FallbackResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.Import;
import org.emoflon.ibex.tgg.integrate.integrate.Integrate;
import org.emoflon.ibex.tgg.integrate.integrate.IntegrateFactory;
import org.emoflon.ibex.tgg.integrate.integrate.IntegratePackage;
import org.emoflon.ibex.tgg.integrate.integrate.LiteralValue;
import org.emoflon.ibex.tgg.integrate.integrate.MergeAndPreserveResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.OperationalDelta;
import org.emoflon.ibex.tgg.integrate.integrate.OrExpression;
import org.emoflon.ibex.tgg.integrate.integrate.Pipeline;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageCount;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageCreated;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageDeleted;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageEnd;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageExists;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageFilter;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageModification;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageSrc;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageStart;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageTrg;
import org.emoflon.ibex.tgg.integrate.integrate.PipelineStageType;
import org.emoflon.ibex.tgg.integrate.integrate.PreferSourceResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.PreferTargetResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.Resolution;
import org.emoflon.ibex.tgg.integrate.integrate.ResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.ResolutionStrategyWithOperationalDelta;
import org.emoflon.ibex.tgg.integrate.integrate.RevokeAdditionResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.RevokeDeletionResolutionStrategy;
import org.emoflon.ibex.tgg.integrate.integrate.SatisfactionRule;
import org.emoflon.ibex.tgg.integrate.integrate.Variable;
import org.emoflon.ibex.tgg.integrate.integrate.VariableReference;
import org.emoflon.ibex.tgg.integrate.integrate.WrappedOrExpression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class IntegratePackageImpl extends EPackageImpl implements IntegratePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass integrateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass packageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conflictResolutionSpecificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageStartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageSrcEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageTrgEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageFilterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageModificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageCreatedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageDeletedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageEndEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageCountEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineStageExistsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass satisfactionRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass wrappedOrExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass comparisonExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass comparisonParameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass literalValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass resolutionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass resolutionStrategyWithOperationalDeltaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass resolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fallbackResolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mergeAndPreserveResolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass revokeAdditionResolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass revokeDeletionResolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass preferSourceResolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass preferTargetResolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deleteCorrespondencesResolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass continueResolutionStrategyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationalDeltaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass andExpressionEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.emoflon.ibex.tgg.integrate.integrate.IntegratePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private IntegratePackageImpl()
  {
    super(eNS_URI, IntegrateFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link IntegratePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static IntegratePackage init()
  {
    if (isInited) return (IntegratePackage)EPackage.Registry.INSTANCE.getEPackage(IntegratePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredIntegratePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    IntegratePackageImpl theIntegratePackage = registeredIntegratePackage instanceof IntegratePackageImpl ? (IntegratePackageImpl)registeredIntegratePackage : new IntegratePackageImpl();

    isInited = true;

    // Initialize simple dependencies
    TggPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theIntegratePackage.createPackageContents();

    // Initialize created meta-data
    theIntegratePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theIntegratePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(IntegratePackage.eNS_URI, theIntegratePackage);
    return theIntegratePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIntegrate()
  {
    return integrateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIntegrate_Package()
  {
    return (EReference)integrateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIntegrate_Imports()
  {
    return (EReference)integrateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIntegrate_ConflictResolutionSpecifications()
  {
    return (EReference)integrateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPackage()
  {
    return packageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPackage_Name()
  {
    return (EAttribute)packageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getImport_Schema()
  {
    return (EReference)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConflictResolutionSpecification()
  {
    return conflictResolutionSpecificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConflictResolutionSpecification_Name()
  {
    return (EAttribute)conflictResolutionSpecificationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConflictResolutionSpecification_Variables()
  {
    return (EReference)conflictResolutionSpecificationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConflictResolutionSpecification_Rule()
  {
    return (EReference)conflictResolutionSpecificationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConflictResolutionSpecification_Resolution()
  {
    return (EReference)conflictResolutionSpecificationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariable()
  {
    return variableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariable_Name()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariable_Pipeline()
  {
    return (EReference)variableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariableReference()
  {
    return variableReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariableReference_Ref()
  {
    return (EReference)variableReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipeline()
  {
    return pipelineEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPipeline_Start()
  {
    return (EReference)pipelineEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageStart()
  {
    return pipelineStageStartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPipelineStageStart_Name()
  {
    return (EAttribute)pipelineStageStartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPipelineStageStart_Next()
  {
    return (EReference)pipelineStageStartEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageSrc()
  {
    return pipelineStageSrcEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageTrg()
  {
    return pipelineStageTrgEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageFilter()
  {
    return pipelineStageFilterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPipelineStageFilter_Name()
  {
    return (EAttribute)pipelineStageFilterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageModification()
  {
    return pipelineStageModificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPipelineStageModification_Next()
  {
    return (EReference)pipelineStageModificationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageCreated()
  {
    return pipelineStageCreatedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageDeleted()
  {
    return pipelineStageDeletedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageType()
  {
    return pipelineStageTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPipelineStageType_Types()
  {
    return (EReference)pipelineStageTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPipelineStageType_Next()
  {
    return (EReference)pipelineStageTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageEnd()
  {
    return pipelineStageEndEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPipelineStageEnd_Name()
  {
    return (EAttribute)pipelineStageEndEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageCount()
  {
    return pipelineStageCountEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineStageExists()
  {
    return pipelineStageExistsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSatisfactionRule()
  {
    return satisfactionRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSatisfactionRule_Expression()
  {
    return (EReference)satisfactionRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanExpression()
  {
    return booleanExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBooleanExpression_Invert()
  {
    return (EAttribute)booleanExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBooleanExpression_Expression()
  {
    return (EReference)booleanExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWrappedOrExpression()
  {
    return wrappedOrExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWrappedOrExpression_Expression()
  {
    return (EReference)wrappedOrExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getComparisonExpression()
  {
    return comparisonExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_Lhs()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getComparisonExpression_Op()
  {
    return (EAttribute)comparisonExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_Rhs()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getComparisonParameter()
  {
    return comparisonParameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLiteralValue()
  {
    return literalValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLiteralValue_Value()
  {
    return (EAttribute)literalValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getResolution()
  {
    return resolutionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getResolution_Strategies()
  {
    return (EReference)resolutionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getResolution_Fallback()
  {
    return (EReference)resolutionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getResolutionStrategyWithOperationalDelta()
  {
    return resolutionStrategyWithOperationalDeltaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getResolutionStrategyWithOperationalDelta_Strategy()
  {
    return (EReference)resolutionStrategyWithOperationalDeltaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getResolutionStrategyWithOperationalDelta_OperationalDelta()
  {
    return (EReference)resolutionStrategyWithOperationalDeltaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getResolutionStrategy()
  {
    return resolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getResolutionStrategy_Name()
  {
    return (EAttribute)resolutionStrategyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFallbackResolutionStrategy()
  {
    return fallbackResolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMergeAndPreserveResolutionStrategy()
  {
    return mergeAndPreserveResolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRevokeAdditionResolutionStrategy()
  {
    return revokeAdditionResolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRevokeDeletionResolutionStrategy()
  {
    return revokeDeletionResolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPreferSourceResolutionStrategy()
  {
    return preferSourceResolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPreferTargetResolutionStrategy()
  {
    return preferTargetResolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDeleteCorrespondencesResolutionStrategy()
  {
    return deleteCorrespondencesResolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContinueResolutionStrategy()
  {
    return continueResolutionStrategyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperationalDelta()
  {
    return operationalDeltaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperationalDelta_Variables()
  {
    return (EReference)operationalDeltaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperationalDelta_Rule()
  {
    return (EReference)operationalDeltaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOrExpression()
  {
    return orExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOrExpression_Left()
  {
    return (EReference)orExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOrExpression_Right()
  {
    return (EReference)orExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAndExpression()
  {
    return andExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAndExpression_Left()
  {
    return (EReference)andExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAndExpression_Right()
  {
    return (EReference)andExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrateFactory getIntegrateFactory()
  {
    return (IntegrateFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    integrateEClass = createEClass(INTEGRATE);
    createEReference(integrateEClass, INTEGRATE__PACKAGE);
    createEReference(integrateEClass, INTEGRATE__IMPORTS);
    createEReference(integrateEClass, INTEGRATE__CONFLICT_RESOLUTION_SPECIFICATIONS);

    packageEClass = createEClass(PACKAGE);
    createEAttribute(packageEClass, PACKAGE__NAME);

    importEClass = createEClass(IMPORT);
    createEReference(importEClass, IMPORT__SCHEMA);

    conflictResolutionSpecificationEClass = createEClass(CONFLICT_RESOLUTION_SPECIFICATION);
    createEAttribute(conflictResolutionSpecificationEClass, CONFLICT_RESOLUTION_SPECIFICATION__NAME);
    createEReference(conflictResolutionSpecificationEClass, CONFLICT_RESOLUTION_SPECIFICATION__VARIABLES);
    createEReference(conflictResolutionSpecificationEClass, CONFLICT_RESOLUTION_SPECIFICATION__RULE);
    createEReference(conflictResolutionSpecificationEClass, CONFLICT_RESOLUTION_SPECIFICATION__RESOLUTION);

    variableEClass = createEClass(VARIABLE);
    createEAttribute(variableEClass, VARIABLE__NAME);
    createEReference(variableEClass, VARIABLE__PIPELINE);

    variableReferenceEClass = createEClass(VARIABLE_REFERENCE);
    createEReference(variableReferenceEClass, VARIABLE_REFERENCE__REF);

    pipelineEClass = createEClass(PIPELINE);
    createEReference(pipelineEClass, PIPELINE__START);

    pipelineStageStartEClass = createEClass(PIPELINE_STAGE_START);
    createEAttribute(pipelineStageStartEClass, PIPELINE_STAGE_START__NAME);
    createEReference(pipelineStageStartEClass, PIPELINE_STAGE_START__NEXT);

    pipelineStageSrcEClass = createEClass(PIPELINE_STAGE_SRC);

    pipelineStageTrgEClass = createEClass(PIPELINE_STAGE_TRG);

    pipelineStageFilterEClass = createEClass(PIPELINE_STAGE_FILTER);
    createEAttribute(pipelineStageFilterEClass, PIPELINE_STAGE_FILTER__NAME);

    pipelineStageModificationEClass = createEClass(PIPELINE_STAGE_MODIFICATION);
    createEReference(pipelineStageModificationEClass, PIPELINE_STAGE_MODIFICATION__NEXT);

    pipelineStageCreatedEClass = createEClass(PIPELINE_STAGE_CREATED);

    pipelineStageDeletedEClass = createEClass(PIPELINE_STAGE_DELETED);

    pipelineStageTypeEClass = createEClass(PIPELINE_STAGE_TYPE);
    createEReference(pipelineStageTypeEClass, PIPELINE_STAGE_TYPE__TYPES);
    createEReference(pipelineStageTypeEClass, PIPELINE_STAGE_TYPE__NEXT);

    pipelineStageEndEClass = createEClass(PIPELINE_STAGE_END);
    createEAttribute(pipelineStageEndEClass, PIPELINE_STAGE_END__NAME);

    pipelineStageCountEClass = createEClass(PIPELINE_STAGE_COUNT);

    pipelineStageExistsEClass = createEClass(PIPELINE_STAGE_EXISTS);

    satisfactionRuleEClass = createEClass(SATISFACTION_RULE);
    createEReference(satisfactionRuleEClass, SATISFACTION_RULE__EXPRESSION);

    expressionEClass = createEClass(EXPRESSION);

    booleanExpressionEClass = createEClass(BOOLEAN_EXPRESSION);
    createEAttribute(booleanExpressionEClass, BOOLEAN_EXPRESSION__INVERT);
    createEReference(booleanExpressionEClass, BOOLEAN_EXPRESSION__EXPRESSION);

    wrappedOrExpressionEClass = createEClass(WRAPPED_OR_EXPRESSION);
    createEReference(wrappedOrExpressionEClass, WRAPPED_OR_EXPRESSION__EXPRESSION);

    comparisonExpressionEClass = createEClass(COMPARISON_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__LHS);
    createEAttribute(comparisonExpressionEClass, COMPARISON_EXPRESSION__OP);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__RHS);

    comparisonParameterEClass = createEClass(COMPARISON_PARAMETER);

    literalValueEClass = createEClass(LITERAL_VALUE);
    createEAttribute(literalValueEClass, LITERAL_VALUE__VALUE);

    resolutionEClass = createEClass(RESOLUTION);
    createEReference(resolutionEClass, RESOLUTION__STRATEGIES);
    createEReference(resolutionEClass, RESOLUTION__FALLBACK);

    resolutionStrategyWithOperationalDeltaEClass = createEClass(RESOLUTION_STRATEGY_WITH_OPERATIONAL_DELTA);
    createEReference(resolutionStrategyWithOperationalDeltaEClass, RESOLUTION_STRATEGY_WITH_OPERATIONAL_DELTA__STRATEGY);
    createEReference(resolutionStrategyWithOperationalDeltaEClass, RESOLUTION_STRATEGY_WITH_OPERATIONAL_DELTA__OPERATIONAL_DELTA);

    resolutionStrategyEClass = createEClass(RESOLUTION_STRATEGY);
    createEAttribute(resolutionStrategyEClass, RESOLUTION_STRATEGY__NAME);

    fallbackResolutionStrategyEClass = createEClass(FALLBACK_RESOLUTION_STRATEGY);

    mergeAndPreserveResolutionStrategyEClass = createEClass(MERGE_AND_PRESERVE_RESOLUTION_STRATEGY);

    revokeAdditionResolutionStrategyEClass = createEClass(REVOKE_ADDITION_RESOLUTION_STRATEGY);

    revokeDeletionResolutionStrategyEClass = createEClass(REVOKE_DELETION_RESOLUTION_STRATEGY);

    preferSourceResolutionStrategyEClass = createEClass(PREFER_SOURCE_RESOLUTION_STRATEGY);

    preferTargetResolutionStrategyEClass = createEClass(PREFER_TARGET_RESOLUTION_STRATEGY);

    deleteCorrespondencesResolutionStrategyEClass = createEClass(DELETE_CORRESPONDENCES_RESOLUTION_STRATEGY);

    continueResolutionStrategyEClass = createEClass(CONTINUE_RESOLUTION_STRATEGY);

    operationalDeltaEClass = createEClass(OPERATIONAL_DELTA);
    createEReference(operationalDeltaEClass, OPERATIONAL_DELTA__VARIABLES);
    createEReference(operationalDeltaEClass, OPERATIONAL_DELTA__RULE);

    orExpressionEClass = createEClass(OR_EXPRESSION);
    createEReference(orExpressionEClass, OR_EXPRESSION__LEFT);
    createEReference(orExpressionEClass, OR_EXPRESSION__RIGHT);

    andExpressionEClass = createEClass(AND_EXPRESSION);
    createEReference(andExpressionEClass, AND_EXPRESSION__LEFT);
    createEReference(andExpressionEClass, AND_EXPRESSION__RIGHT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    TggPackage theTggPackage = (TggPackage)EPackage.Registry.INSTANCE.getEPackage(TggPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    variableReferenceEClass.getESuperTypes().add(this.getComparisonParameter());
    pipelineStageSrcEClass.getESuperTypes().add(this.getPipelineStageStart());
    pipelineStageTrgEClass.getESuperTypes().add(this.getPipelineStageStart());
    pipelineStageModificationEClass.getESuperTypes().add(this.getPipelineStageFilter());
    pipelineStageCreatedEClass.getESuperTypes().add(this.getPipelineStageModification());
    pipelineStageDeletedEClass.getESuperTypes().add(this.getPipelineStageModification());
    pipelineStageTypeEClass.getESuperTypes().add(this.getPipelineStageFilter());
    pipelineStageCountEClass.getESuperTypes().add(this.getPipelineStageEnd());
    pipelineStageExistsEClass.getESuperTypes().add(this.getPipelineStageEnd());
    booleanExpressionEClass.getESuperTypes().add(this.getExpression());
    literalValueEClass.getESuperTypes().add(this.getComparisonParameter());
    fallbackResolutionStrategyEClass.getESuperTypes().add(this.getResolutionStrategy());
    mergeAndPreserveResolutionStrategyEClass.getESuperTypes().add(this.getResolutionStrategy());
    revokeAdditionResolutionStrategyEClass.getESuperTypes().add(this.getResolutionStrategy());
    revokeDeletionResolutionStrategyEClass.getESuperTypes().add(this.getResolutionStrategy());
    preferSourceResolutionStrategyEClass.getESuperTypes().add(this.getFallbackResolutionStrategy());
    preferTargetResolutionStrategyEClass.getESuperTypes().add(this.getFallbackResolutionStrategy());
    deleteCorrespondencesResolutionStrategyEClass.getESuperTypes().add(this.getFallbackResolutionStrategy());
    continueResolutionStrategyEClass.getESuperTypes().add(this.getFallbackResolutionStrategy());
    orExpressionEClass.getESuperTypes().add(this.getExpression());
    andExpressionEClass.getESuperTypes().add(this.getExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(integrateEClass, Integrate.class, "Integrate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIntegrate_Package(), this.getPackage(), null, "package", null, 0, 1, Integrate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIntegrate_Imports(), this.getImport(), null, "imports", null, 0, -1, Integrate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIntegrate_ConflictResolutionSpecifications(), this.getConflictResolutionSpecification(), null, "conflictResolutionSpecifications", null, 0, -1, Integrate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(packageEClass, org.emoflon.ibex.tgg.integrate.integrate.Package.class, "Package", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPackage_Name(), ecorePackage.getEString(), "name", null, 0, 1, org.emoflon.ibex.tgg.integrate.integrate.Package.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getImport_Schema(), theTggPackage.getSchema(), null, "schema", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conflictResolutionSpecificationEClass, ConflictResolutionSpecification.class, "ConflictResolutionSpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConflictResolutionSpecification_Name(), ecorePackage.getEString(), "name", null, 0, 1, ConflictResolutionSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConflictResolutionSpecification_Variables(), this.getVariable(), null, "variables", null, 0, -1, ConflictResolutionSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConflictResolutionSpecification_Rule(), this.getSatisfactionRule(), null, "rule", null, 0, 1, ConflictResolutionSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConflictResolutionSpecification_Resolution(), this.getResolution(), null, "resolution", null, 0, 1, ConflictResolutionSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableEClass, Variable.class, "Variable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariable_Pipeline(), this.getPipeline(), null, "pipeline", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableReferenceEClass, VariableReference.class, "VariableReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVariableReference_Ref(), this.getVariable(), null, "ref", null, 0, 1, VariableReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pipelineEClass, Pipeline.class, "Pipeline", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPipeline_Start(), this.getPipelineStageStart(), null, "start", null, 0, 1, Pipeline.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pipelineStageStartEClass, PipelineStageStart.class, "PipelineStageStart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPipelineStageStart_Name(), ecorePackage.getEString(), "name", null, 0, 1, PipelineStageStart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPipelineStageStart_Next(), ecorePackage.getEObject(), null, "next", null, 0, 1, PipelineStageStart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pipelineStageSrcEClass, PipelineStageSrc.class, "PipelineStageSrc", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pipelineStageTrgEClass, PipelineStageTrg.class, "PipelineStageTrg", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pipelineStageFilterEClass, PipelineStageFilter.class, "PipelineStageFilter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPipelineStageFilter_Name(), ecorePackage.getEString(), "name", null, 0, 1, PipelineStageFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pipelineStageModificationEClass, PipelineStageModification.class, "PipelineStageModification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPipelineStageModification_Next(), ecorePackage.getEObject(), null, "next", null, 0, 1, PipelineStageModification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pipelineStageCreatedEClass, PipelineStageCreated.class, "PipelineStageCreated", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pipelineStageDeletedEClass, PipelineStageDeleted.class, "PipelineStageDeleted", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pipelineStageTypeEClass, PipelineStageType.class, "PipelineStageType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPipelineStageType_Types(), ecorePackage.getEClass(), null, "types", null, 0, -1, PipelineStageType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPipelineStageType_Next(), this.getPipelineStageEnd(), null, "next", null, 0, 1, PipelineStageType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pipelineStageEndEClass, PipelineStageEnd.class, "PipelineStageEnd", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPipelineStageEnd_Name(), ecorePackage.getEString(), "name", null, 0, 1, PipelineStageEnd.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pipelineStageCountEClass, PipelineStageCount.class, "PipelineStageCount", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pipelineStageExistsEClass, PipelineStageExists.class, "PipelineStageExists", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(satisfactionRuleEClass, SatisfactionRule.class, "SatisfactionRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSatisfactionRule_Expression(), this.getExpression(), null, "expression", null, 0, 1, SatisfactionRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionEClass, Expression.class, "Expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(booleanExpressionEClass, BooleanExpression.class, "BooleanExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBooleanExpression_Invert(), ecorePackage.getEBoolean(), "invert", null, 0, 1, BooleanExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBooleanExpression_Expression(), ecorePackage.getEObject(), null, "expression", null, 0, 1, BooleanExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(wrappedOrExpressionEClass, WrappedOrExpression.class, "WrappedOrExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getWrappedOrExpression_Expression(), this.getExpression(), null, "expression", null, 0, 1, WrappedOrExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(comparisonExpressionEClass, ComparisonExpression.class, "ComparisonExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getComparisonExpression_Lhs(), this.getComparisonParameter(), null, "lhs", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getComparisonExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_Rhs(), this.getComparisonParameter(), null, "rhs", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(comparisonParameterEClass, ComparisonParameter.class, "ComparisonParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(literalValueEClass, LiteralValue.class, "LiteralValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLiteralValue_Value(), ecorePackage.getEInt(), "value", null, 0, 1, LiteralValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(resolutionEClass, Resolution.class, "Resolution", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getResolution_Strategies(), this.getResolutionStrategyWithOperationalDelta(), null, "strategies", null, 0, -1, Resolution.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getResolution_Fallback(), this.getFallbackResolutionStrategy(), null, "fallback", null, 0, 1, Resolution.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(resolutionStrategyWithOperationalDeltaEClass, ResolutionStrategyWithOperationalDelta.class, "ResolutionStrategyWithOperationalDelta", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getResolutionStrategyWithOperationalDelta_Strategy(), this.getResolutionStrategy(), null, "strategy", null, 0, 1, ResolutionStrategyWithOperationalDelta.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getResolutionStrategyWithOperationalDelta_OperationalDelta(), this.getOperationalDelta(), null, "operationalDelta", null, 0, 1, ResolutionStrategyWithOperationalDelta.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(resolutionStrategyEClass, ResolutionStrategy.class, "ResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getResolutionStrategy_Name(), ecorePackage.getEString(), "name", null, 0, 1, ResolutionStrategy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fallbackResolutionStrategyEClass, FallbackResolutionStrategy.class, "FallbackResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mergeAndPreserveResolutionStrategyEClass, MergeAndPreserveResolutionStrategy.class, "MergeAndPreserveResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(revokeAdditionResolutionStrategyEClass, RevokeAdditionResolutionStrategy.class, "RevokeAdditionResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(revokeDeletionResolutionStrategyEClass, RevokeDeletionResolutionStrategy.class, "RevokeDeletionResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(preferSourceResolutionStrategyEClass, PreferSourceResolutionStrategy.class, "PreferSourceResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(preferTargetResolutionStrategyEClass, PreferTargetResolutionStrategy.class, "PreferTargetResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(deleteCorrespondencesResolutionStrategyEClass, DeleteCorrespondencesResolutionStrategy.class, "DeleteCorrespondencesResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(continueResolutionStrategyEClass, ContinueResolutionStrategy.class, "ContinueResolutionStrategy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(operationalDeltaEClass, OperationalDelta.class, "OperationalDelta", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperationalDelta_Variables(), this.getVariable(), null, "variables", null, 0, -1, OperationalDelta.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationalDelta_Rule(), this.getSatisfactionRule(), null, "rule", null, 0, 1, OperationalDelta.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(orExpressionEClass, OrExpression.class, "OrExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOrExpression_Left(), this.getExpression(), null, "left", null, 0, 1, OrExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOrExpression_Right(), this.getExpression(), null, "right", null, 0, -1, OrExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(andExpressionEClass, AndExpression.class, "AndExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAndExpression_Left(), this.getExpression(), null, "left", null, 0, 1, AndExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAndExpression_Right(), this.getBooleanExpression(), null, "right", null, 0, -1, AndExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //IntegratePackageImpl
