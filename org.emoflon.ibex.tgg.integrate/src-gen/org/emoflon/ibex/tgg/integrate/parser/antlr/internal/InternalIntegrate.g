/*
 * generated by Xtext 2.26.0
 */
grammar InternalIntegrate;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.emoflon.ibex.tgg.integrate.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.emoflon.ibex.tgg.integrate.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.emoflon.ibex.tgg.integrate.services.IntegrateGrammarAccess;

}

@parser::members {

 	private IntegrateGrammarAccess grammarAccess;

    public InternalIntegrateParser(TokenStream input, IntegrateGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Integrate";
   	}

   	@Override
   	protected IntegrateGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleIntegrate
entryRuleIntegrate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegrateRule()); }
	iv_ruleIntegrate=ruleIntegrate
	{ $current=$iv_ruleIntegrate.current; }
	EOF;

// Rule Integrate
ruleIntegrate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegrateAccess().getPackagePackageParserRuleCall_0_0());
				}
				lv_package_0_0=rulePackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegrateRule());
					}
					set(
						$current,
						"package",
						lv_package_0_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.Package");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegrateAccess().getImportsImportParserRuleCall_1_0());
				}
				lv_imports_1_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegrateRule());
					}
					add(
						$current,
						"imports",
						lv_imports_1_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegrateAccess().getConflictResolutionSpecificationsConflictResolutionSpecificationParserRuleCall_2_0());
				}
				lv_conflictResolutionSpecifications_2_0=ruleConflictResolutionSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegrateRule());
					}
					add(
						$current,
						"conflictResolutionSpecifications",
						lv_conflictResolutionSpecifications_2_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.ConflictResolutionSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getImportAccess().getSchemaSchemaCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleConflictResolutionSpecification
entryRuleConflictResolutionSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConflictResolutionSpecificationRule()); }
	iv_ruleConflictResolutionSpecification=ruleConflictResolutionSpecification
	{ $current=$iv_ruleConflictResolutionSpecification.current; }
	EOF;

// Rule ConflictResolutionSpecification
ruleConflictResolutionSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConflictResolutionSpecificationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConflictResolutionSpecificationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConflictResolutionSpecificationAccess().getColonKeyword_1());
		}
		otherlv_2='solve'
		{
			newLeafNode(otherlv_2, grammarAccess.getConflictResolutionSpecificationAccess().getSolveKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getConflictResolutionSpecificationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConflictResolutionSpecificationAccess().getVariablesVariableParserRuleCall_4_0());
				}
				lv_variables_4_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConflictResolutionSpecificationRule());
					}
					add(
						$current,
						"variables",
						lv_variables_4_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5='satisfies'
		{
			newLeafNode(otherlv_5, grammarAccess.getConflictResolutionSpecificationAccess().getSatisfiesKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getConflictResolutionSpecificationAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConflictResolutionSpecificationAccess().getRuleSatisfactionRuleParserRuleCall_7_0());
				}
				lv_rule_7_0=ruleSatisfactionRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConflictResolutionSpecificationRule());
					}
					set(
						$current,
						"rule",
						lv_rule_7_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.SatisfactionRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getConflictResolutionSpecificationAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getConflictResolutionSpecificationAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_10='with'
		{
			newLeafNode(otherlv_10, grammarAccess.getConflictResolutionSpecificationAccess().getWithKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConflictResolutionSpecificationAccess().getResolutionResolutionParserRuleCall_11_0());
				}
				lv_resolution_11_0=ruleResolution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConflictResolutionSpecificationRule());
					}
					set(
						$current,
						"resolution",
						lv_resolution_11_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.Resolution");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getPipelinePipelineParserRuleCall_3_0());
				}
				lv_pipeline_3_0=rulePipeline
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"pipeline",
						lv_pipeline_3_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.Pipeline");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableReference
entryRuleVariableReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableReferenceRule()); }
	iv_ruleVariableReference=ruleVariableReference
	{ $current=$iv_ruleVariableReference.current; }
	EOF;

// Rule VariableReference
ruleVariableReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableReferenceRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getVariableReferenceAccess().getRefVariableCrossReference_0());
			}
		)
	)
;

// Entry rule entryRulePipeline
entryRulePipeline returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineRule()); }
	iv_rulePipeline=rulePipeline
	{ $current=$iv_rulePipeline.current; }
	EOF;

// Rule Pipeline
rulePipeline returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPipelineAccess().getStartPipelineStageStartParserRuleCall_0());
			}
			lv_start_0_0=rulePipelineStageStart
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPipelineRule());
				}
				set(
					$current,
					"start",
					lv_start_0_0,
					"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageStart");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePipelineStageStart
entryRulePipelineStageStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageStartRule()); }
	iv_rulePipelineStageStart=rulePipelineStageStart
	{ $current=$iv_rulePipelineStageStart.current; }
	EOF;

// Rule PipelineStageStart
rulePipelineStageStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPipelineStageStartAccess().getPipelineStageSrcParserRuleCall_0());
		}
		this_PipelineStageSrc_0=rulePipelineStageSrc
		{
			$current = $this_PipelineStageSrc_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPipelineStageStartAccess().getPipelineStageTrgParserRuleCall_1());
		}
		this_PipelineStageTrg_1=rulePipelineStageTrg
		{
			$current = $this_PipelineStageTrg_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePipelineStageSrc
entryRulePipelineStageSrc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageSrcRule()); }
	iv_rulePipelineStageSrc=rulePipelineStageSrc
	{ $current=$iv_rulePipelineStageSrc.current; }
	EOF;

// Rule PipelineStageSrc
rulePipelineStageSrc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='src'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPipelineStageSrcAccess().getNameSrcKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPipelineStageSrcRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "src");
				}
			)
		)
		otherlv_1='|'
		{
			newLeafNode(otherlv_1, grammarAccess.getPipelineStageSrcAccess().getVerticalLineKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPipelineStageSrcAccess().getNextPipelineStageFilterParserRuleCall_2_0_0());
					}
					lv_next_2_1=rulePipelineStageFilter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineStageSrcRule());
						}
						set(
							$current,
							"next",
							lv_next_2_1,
							"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageFilter");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPipelineStageSrcAccess().getNextPipelineStageEndParserRuleCall_2_0_1());
					}
					lv_next_2_2=rulePipelineStageEnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineStageSrcRule());
						}
						set(
							$current,
							"next",
							lv_next_2_2,
							"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageEnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePipelineStageTrg
entryRulePipelineStageTrg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageTrgRule()); }
	iv_rulePipelineStageTrg=rulePipelineStageTrg
	{ $current=$iv_rulePipelineStageTrg.current; }
	EOF;

// Rule PipelineStageTrg
rulePipelineStageTrg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='trg'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPipelineStageTrgAccess().getNameTrgKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPipelineStageTrgRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "trg");
				}
			)
		)
		otherlv_1='|'
		{
			newLeafNode(otherlv_1, grammarAccess.getPipelineStageTrgAccess().getVerticalLineKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPipelineStageTrgAccess().getNextPipelineStageFilterParserRuleCall_2_0_0());
					}
					lv_next_2_1=rulePipelineStageFilter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineStageTrgRule());
						}
						set(
							$current,
							"next",
							lv_next_2_1,
							"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageFilter");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPipelineStageTrgAccess().getNextPipelineStageEndParserRuleCall_2_0_1());
					}
					lv_next_2_2=rulePipelineStageEnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineStageTrgRule());
						}
						set(
							$current,
							"next",
							lv_next_2_2,
							"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageEnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePipelineStageFilter
entryRulePipelineStageFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageFilterRule()); }
	iv_rulePipelineStageFilter=rulePipelineStageFilter
	{ $current=$iv_rulePipelineStageFilter.current; }
	EOF;

// Rule PipelineStageFilter
rulePipelineStageFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPipelineStageFilterAccess().getPipelineStageModificationParserRuleCall_0());
		}
		this_PipelineStageModification_0=rulePipelineStageModification
		{
			$current = $this_PipelineStageModification_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPipelineStageFilterAccess().getPipelineStageTypeParserRuleCall_1());
		}
		this_PipelineStageType_1=rulePipelineStageType
		{
			$current = $this_PipelineStageType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePipelineStageModification
entryRulePipelineStageModification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageModificationRule()); }
	iv_rulePipelineStageModification=rulePipelineStageModification
	{ $current=$iv_rulePipelineStageModification.current; }
	EOF;

// Rule PipelineStageModification
rulePipelineStageModification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPipelineStageModificationAccess().getPipelineStageCreatedParserRuleCall_0());
		}
		this_PipelineStageCreated_0=rulePipelineStageCreated
		{
			$current = $this_PipelineStageCreated_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPipelineStageModificationAccess().getPipelineStageDeletedParserRuleCall_1());
		}
		this_PipelineStageDeleted_1=rulePipelineStageDeleted
		{
			$current = $this_PipelineStageDeleted_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePipelineStageCreated
entryRulePipelineStageCreated returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageCreatedRule()); }
	iv_rulePipelineStageCreated=rulePipelineStageCreated
	{ $current=$iv_rulePipelineStageCreated.current; }
	EOF;

// Rule PipelineStageCreated
rulePipelineStageCreated returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='created'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPipelineStageCreatedAccess().getNameCreatedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPipelineStageCreatedRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "created");
				}
			)
		)
		otherlv_1='|'
		{
			newLeafNode(otherlv_1, grammarAccess.getPipelineStageCreatedAccess().getVerticalLineKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPipelineStageCreatedAccess().getNextPipelineStageTypeParserRuleCall_2_0_0());
					}
					lv_next_2_1=rulePipelineStageType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineStageCreatedRule());
						}
						set(
							$current,
							"next",
							lv_next_2_1,
							"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageType");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPipelineStageCreatedAccess().getNextPipelineStageEndParserRuleCall_2_0_1());
					}
					lv_next_2_2=rulePipelineStageEnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineStageCreatedRule());
						}
						set(
							$current,
							"next",
							lv_next_2_2,
							"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageEnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePipelineStageDeleted
entryRulePipelineStageDeleted returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageDeletedRule()); }
	iv_rulePipelineStageDeleted=rulePipelineStageDeleted
	{ $current=$iv_rulePipelineStageDeleted.current; }
	EOF;

// Rule PipelineStageDeleted
rulePipelineStageDeleted returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='deleted'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPipelineStageDeletedAccess().getNameDeletedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPipelineStageDeletedRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "deleted");
				}
			)
		)
		otherlv_1='|'
		{
			newLeafNode(otherlv_1, grammarAccess.getPipelineStageDeletedAccess().getVerticalLineKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPipelineStageDeletedAccess().getNextPipelineStageTypeParserRuleCall_2_0_0());
					}
					lv_next_2_1=rulePipelineStageType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineStageDeletedRule());
						}
						set(
							$current,
							"next",
							lv_next_2_1,
							"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageType");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPipelineStageDeletedAccess().getNextPipelineStageEndParserRuleCall_2_0_1());
					}
					lv_next_2_2=rulePipelineStageEnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineStageDeletedRule());
						}
						set(
							$current,
							"next",
							lv_next_2_2,
							"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageEnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePipelineStageType
entryRulePipelineStageType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageTypeRule()); }
	iv_rulePipelineStageType=rulePipelineStageType
	{ $current=$iv_rulePipelineStageType.current; }
	EOF;

// Rule PipelineStageType
rulePipelineStageType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='type'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPipelineStageTypeAccess().getNameTypeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPipelineStageTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "type");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPipelineStageTypeRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getPipelineStageTypeAccess().getTypesEClassCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getPipelineStageTypeAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPipelineStageTypeRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getPipelineStageTypeAccess().getTypesEClassCrossReference_2_1_0());
					}
				)
			)
		)*
		otherlv_4='|'
		{
			newLeafNode(otherlv_4, grammarAccess.getPipelineStageTypeAccess().getVerticalLineKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPipelineStageTypeAccess().getNextPipelineStageEndParserRuleCall_4_0());
				}
				lv_next_5_0=rulePipelineStageEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPipelineStageTypeRule());
					}
					set(
						$current,
						"next",
						lv_next_5_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.PipelineStageEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePipelineStageEnd
entryRulePipelineStageEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageEndRule()); }
	iv_rulePipelineStageEnd=rulePipelineStageEnd
	{ $current=$iv_rulePipelineStageEnd.current; }
	EOF;

// Rule PipelineStageEnd
rulePipelineStageEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPipelineStageEndAccess().getPipelineStageCountParserRuleCall_0());
		}
		this_PipelineStageCount_0=rulePipelineStageCount
		{
			$current = $this_PipelineStageCount_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPipelineStageEndAccess().getPipelineStageExistsParserRuleCall_1());
		}
		this_PipelineStageExists_1=rulePipelineStageExists
		{
			$current = $this_PipelineStageExists_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePipelineStageCount
entryRulePipelineStageCount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageCountRule()); }
	iv_rulePipelineStageCount=rulePipelineStageCount
	{ $current=$iv_rulePipelineStageCount.current; }
	EOF;

// Rule PipelineStageCount
rulePipelineStageCount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='count'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getPipelineStageCountAccess().getNameCountKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPipelineStageCountRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "count");
			}
		)
	)
;

// Entry rule entryRulePipelineStageExists
entryRulePipelineStageExists returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineStageExistsRule()); }
	iv_rulePipelineStageExists=rulePipelineStageExists
	{ $current=$iv_rulePipelineStageExists.current; }
	EOF;

// Rule PipelineStageExists
rulePipelineStageExists returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='exists'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getPipelineStageExistsAccess().getNameExistsKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPipelineStageExistsRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "exists");
			}
		)
	)
;

// Entry rule entryRuleSatisfactionRule
entryRuleSatisfactionRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSatisfactionRuleRule()); }
	iv_ruleSatisfactionRule=ruleSatisfactionRule
	{ $current=$iv_ruleSatisfactionRule.current; }
	EOF;

// Rule SatisfactionRule
ruleSatisfactionRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSatisfactionRuleAccess().getExpressionOrExpressionParserRuleCall_0());
			}
			lv_expression_0_0=ruleOrExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSatisfactionRuleRule());
				}
				set(
					$current,
					"expression",
					lv_expression_0_0,
					"org.emoflon.ibex.tgg.integrate.Integrate.OrExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='or'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrExpressionAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						add(
							$current,
							"right",
							lv_right_3_0,
							"org.emoflon.ibex.tgg.integrate.Integrate.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getBooleanExpressionParserRuleCall_0());
		}
		this_BooleanExpression_0=ruleBooleanExpression
		{
			$current = $this_BooleanExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='and'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndExpressionAccess().getAndKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightBooleanExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleBooleanExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						add(
							$current,
							"right",
							lv_right_3_0,
							"org.emoflon.ibex.tgg.integrate.Integrate.BooleanExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_invert_0_0='not'
				{
					newLeafNode(lv_invert_0_0, grammarAccess.getBooleanExpressionAccess().getInvertNotKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanExpressionRule());
					}
					setWithLastConsumed($current, "invert", lv_invert_0_0 != null, "not");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpressionComparisonExpressionParserRuleCall_1_0_0());
					}
					lv_expression_1_1=ruleComparisonExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_1,
							"org.emoflon.ibex.tgg.integrate.Integrate.ComparisonExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpressionVariableReferenceParserRuleCall_1_0_1());
					}
					lv_expression_1_2=ruleVariableReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_2,
							"org.emoflon.ibex.tgg.integrate.Integrate.VariableReference");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpressionWrappedOrExpressionParserRuleCall_1_0_2());
					}
					lv_expression_1_3=ruleWrappedOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_3,
							"org.emoflon.ibex.tgg.integrate.Integrate.WrappedOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWrappedOrExpression
entryRuleWrappedOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWrappedOrExpressionRule()); }
	iv_ruleWrappedOrExpression=ruleWrappedOrExpression
	{ $current=$iv_ruleWrappedOrExpression.current; }
	EOF;

// Rule WrappedOrExpression
ruleWrappedOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getWrappedOrExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWrappedOrExpressionAccess().getExpressionOrExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWrappedOrExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.OrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getWrappedOrExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonExpressionRule()); }
	iv_ruleComparisonExpression=ruleComparisonExpression
	{ $current=$iv_ruleComparisonExpression.current; }
	EOF;

// Rule ComparisonExpression
ruleComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComparisonExpressionAccess().getLhsComparisonParameterParserRuleCall_0_0());
				}
				lv_lhs_0_0=ruleComparisonParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
					}
					set(
						$current,
						"lhs",
						lv_lhs_0_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.ComparisonParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_op_1_1='>'
					{
						newLeafNode(lv_op_1_1, grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComparisonExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_1, null);
					}
					    |
					lv_op_1_2='>='
					{
						newLeafNode(lv_op_1_2, grammarAccess.getComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComparisonExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_2, null);
					}
					    |
					lv_op_1_3='<'
					{
						newLeafNode(lv_op_1_3, grammarAccess.getComparisonExpressionAccess().getOpLessThanSignKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComparisonExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_3, null);
					}
					    |
					lv_op_1_4='<='
					{
						newLeafNode(lv_op_1_4, grammarAccess.getComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComparisonExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_4, null);
					}
					    |
					lv_op_1_5='=='
					{
						newLeafNode(lv_op_1_5, grammarAccess.getComparisonExpressionAccess().getOpEqualsSignEqualsSignKeyword_1_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComparisonExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_5, null);
					}
					    |
					lv_op_1_6='!='
					{
						newLeafNode(lv_op_1_6, grammarAccess.getComparisonExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComparisonExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_6, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComparisonExpressionAccess().getRhsComparisonParameterParserRuleCall_2_0());
				}
				lv_rhs_2_0=ruleComparisonParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
					}
					set(
						$current,
						"rhs",
						lv_rhs_2_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.ComparisonParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComparisonParameter
entryRuleComparisonParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonParameterRule()); }
	iv_ruleComparisonParameter=ruleComparisonParameter
	{ $current=$iv_ruleComparisonParameter.current; }
	EOF;

// Rule ComparisonParameter
ruleComparisonParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonParameterAccess().getVariableReferenceParserRuleCall_0());
		}
		this_VariableReference_0=ruleVariableReference
		{
			$current = $this_VariableReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComparisonParameterAccess().getLiteralValueParserRuleCall_1());
		}
		this_LiteralValue_1=ruleLiteralValue
		{
			$current = $this_LiteralValue_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	iv_ruleLiteralValue=ruleLiteralValue
	{ $current=$iv_ruleLiteralValue.current; }
	EOF;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getLiteralValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLiteralValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleResolution
entryRuleResolution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResolutionRule()); }
	iv_ruleResolution=ruleResolution
	{ $current=$iv_ruleResolution.current; }
	EOF;

// Rule Resolution
ruleResolution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getResolutionAccess().getStrategiesResolutionStrategyWithOperationalDeltaParserRuleCall_0_0());
				}
				lv_strategies_0_0=ruleResolutionStrategyWithOperationalDelta
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResolutionRule());
					}
					add(
						$current,
						"strategies",
						lv_strategies_0_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.ResolutionStrategyWithOperationalDelta");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='or'
			{
				newLeafNode(otherlv_1, grammarAccess.getResolutionAccess().getOrKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResolutionAccess().getStrategiesResolutionStrategyWithOperationalDeltaParserRuleCall_1_1_0());
					}
					lv_strategies_2_0=ruleResolutionStrategyWithOperationalDelta
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResolutionRule());
						}
						add(
							$current,
							"strategies",
							lv_strategies_2_0,
							"org.emoflon.ibex.tgg.integrate.Integrate.ResolutionStrategyWithOperationalDelta");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getResolutionAccess().getFallbackFallbackResolutionStrategyParserRuleCall_2_0());
				}
				lv_fallback_3_0=ruleFallbackResolutionStrategy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResolutionRule());
					}
					set(
						$current,
						"fallback",
						lv_fallback_3_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.FallbackResolutionStrategy");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleResolutionStrategyWithOperationalDelta
entryRuleResolutionStrategyWithOperationalDelta returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResolutionStrategyWithOperationalDeltaRule()); }
	iv_ruleResolutionStrategyWithOperationalDelta=ruleResolutionStrategyWithOperationalDelta
	{ $current=$iv_ruleResolutionStrategyWithOperationalDelta.current; }
	EOF;

// Rule ResolutionStrategyWithOperationalDelta
ruleResolutionStrategyWithOperationalDelta returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getStrategyResolutionStrategyParserRuleCall_0_0());
				}
				lv_strategy_0_0=ruleResolutionStrategy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResolutionStrategyWithOperationalDeltaRule());
					}
					set(
						$current,
						"strategy",
						lv_strategy_0_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.ResolutionStrategy");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='when'
			{
				newLeafNode(otherlv_1, grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getWhenKeyword_1_0());
			}
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getLeftCurlyBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getOperationalDeltaOperationalDeltaParserRuleCall_1_2_0());
					}
					lv_operationalDelta_3_0=ruleOperationalDelta
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResolutionStrategyWithOperationalDeltaRule());
						}
						set(
							$current,
							"operationalDelta",
							lv_operationalDelta_3_0,
							"org.emoflon.ibex.tgg.integrate.Integrate.OperationalDelta");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='}'
			{
				newLeafNode(otherlv_4, grammarAccess.getResolutionStrategyWithOperationalDeltaAccess().getRightCurlyBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleResolutionStrategy
entryRuleResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResolutionStrategyRule()); }
	iv_ruleResolutionStrategy=ruleResolutionStrategy
	{ $current=$iv_ruleResolutionStrategy.current; }
	EOF;

// Rule ResolutionStrategy
ruleResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getResolutionStrategyAccess().getMergeAndPreserveResolutionStrategyParserRuleCall_0());
		}
		this_MergeAndPreserveResolutionStrategy_0=ruleMergeAndPreserveResolutionStrategy
		{
			$current = $this_MergeAndPreserveResolutionStrategy_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getResolutionStrategyAccess().getRevokeAdditionResolutionStrategyParserRuleCall_1());
		}
		this_RevokeAdditionResolutionStrategy_1=ruleRevokeAdditionResolutionStrategy
		{
			$current = $this_RevokeAdditionResolutionStrategy_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getResolutionStrategyAccess().getRevokeDeletionResolutionStrategyParserRuleCall_2());
		}
		this_RevokeDeletionResolutionStrategy_2=ruleRevokeDeletionResolutionStrategy
		{
			$current = $this_RevokeDeletionResolutionStrategy_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getResolutionStrategyAccess().getFallbackResolutionStrategyParserRuleCall_3());
		}
		this_FallbackResolutionStrategy_3=ruleFallbackResolutionStrategy
		{
			$current = $this_FallbackResolutionStrategy_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFallbackResolutionStrategy
entryRuleFallbackResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFallbackResolutionStrategyRule()); }
	iv_ruleFallbackResolutionStrategy=ruleFallbackResolutionStrategy
	{ $current=$iv_ruleFallbackResolutionStrategy.current; }
	EOF;

// Rule FallbackResolutionStrategy
ruleFallbackResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFallbackResolutionStrategyAccess().getPreferSourceResolutionStrategyParserRuleCall_0());
		}
		this_PreferSourceResolutionStrategy_0=rulePreferSourceResolutionStrategy
		{
			$current = $this_PreferSourceResolutionStrategy_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFallbackResolutionStrategyAccess().getPreferTargetResolutionStrategyParserRuleCall_1());
		}
		this_PreferTargetResolutionStrategy_1=rulePreferTargetResolutionStrategy
		{
			$current = $this_PreferTargetResolutionStrategy_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFallbackResolutionStrategyAccess().getDeleteCorrespondencesResolutionStrategyParserRuleCall_2());
		}
		this_DeleteCorrespondencesResolutionStrategy_2=ruleDeleteCorrespondencesResolutionStrategy
		{
			$current = $this_DeleteCorrespondencesResolutionStrategy_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFallbackResolutionStrategyAccess().getContinueResolutionStrategyParserRuleCall_3());
		}
		this_ContinueResolutionStrategy_3=ruleContinueResolutionStrategy
		{
			$current = $this_ContinueResolutionStrategy_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMergeAndPreserveResolutionStrategy
entryRuleMergeAndPreserveResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMergeAndPreserveResolutionStrategyRule()); }
	iv_ruleMergeAndPreserveResolutionStrategy=ruleMergeAndPreserveResolutionStrategy
	{ $current=$iv_ruleMergeAndPreserveResolutionStrategy.current; }
	EOF;

// Rule MergeAndPreserveResolutionStrategy
ruleMergeAndPreserveResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='mergeAndPreserve'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getMergeAndPreserveResolutionStrategyAccess().getNameMergeAndPreserveKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMergeAndPreserveResolutionStrategyRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "mergeAndPreserve");
			}
		)
	)
;

// Entry rule entryRuleRevokeAdditionResolutionStrategy
entryRuleRevokeAdditionResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRevokeAdditionResolutionStrategyRule()); }
	iv_ruleRevokeAdditionResolutionStrategy=ruleRevokeAdditionResolutionStrategy
	{ $current=$iv_ruleRevokeAdditionResolutionStrategy.current; }
	EOF;

// Rule RevokeAdditionResolutionStrategy
ruleRevokeAdditionResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='revokeAddition'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getRevokeAdditionResolutionStrategyAccess().getNameRevokeAdditionKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRevokeAdditionResolutionStrategyRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "revokeAddition");
			}
		)
	)
;

// Entry rule entryRuleRevokeDeletionResolutionStrategy
entryRuleRevokeDeletionResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRevokeDeletionResolutionStrategyRule()); }
	iv_ruleRevokeDeletionResolutionStrategy=ruleRevokeDeletionResolutionStrategy
	{ $current=$iv_ruleRevokeDeletionResolutionStrategy.current; }
	EOF;

// Rule RevokeDeletionResolutionStrategy
ruleRevokeDeletionResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='revokeDeletion'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getRevokeDeletionResolutionStrategyAccess().getNameRevokeDeletionKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRevokeDeletionResolutionStrategyRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "revokeDeletion");
			}
		)
	)
;

// Entry rule entryRulePreferSourceResolutionStrategy
entryRulePreferSourceResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreferSourceResolutionStrategyRule()); }
	iv_rulePreferSourceResolutionStrategy=rulePreferSourceResolutionStrategy
	{ $current=$iv_rulePreferSourceResolutionStrategy.current; }
	EOF;

// Rule PreferSourceResolutionStrategy
rulePreferSourceResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='preferSource'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getPreferSourceResolutionStrategyAccess().getNamePreferSourceKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPreferSourceResolutionStrategyRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "preferSource");
			}
		)
	)
;

// Entry rule entryRulePreferTargetResolutionStrategy
entryRulePreferTargetResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreferTargetResolutionStrategyRule()); }
	iv_rulePreferTargetResolutionStrategy=rulePreferTargetResolutionStrategy
	{ $current=$iv_rulePreferTargetResolutionStrategy.current; }
	EOF;

// Rule PreferTargetResolutionStrategy
rulePreferTargetResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='preferTarget'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getPreferTargetResolutionStrategyAccess().getNamePreferTargetKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPreferTargetResolutionStrategyRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "preferTarget");
			}
		)
	)
;

// Entry rule entryRuleDeleteCorrespondencesResolutionStrategy
entryRuleDeleteCorrespondencesResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteCorrespondencesResolutionStrategyRule()); }
	iv_ruleDeleteCorrespondencesResolutionStrategy=ruleDeleteCorrespondencesResolutionStrategy
	{ $current=$iv_ruleDeleteCorrespondencesResolutionStrategy.current; }
	EOF;

// Rule DeleteCorrespondencesResolutionStrategy
ruleDeleteCorrespondencesResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='deleteCorrespondences'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDeleteCorrespondencesResolutionStrategyAccess().getNameDeleteCorrespondencesKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDeleteCorrespondencesResolutionStrategyRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "deleteCorrespondences");
			}
		)
	)
;

// Entry rule entryRuleContinueResolutionStrategy
entryRuleContinueResolutionStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContinueResolutionStrategyRule()); }
	iv_ruleContinueResolutionStrategy=ruleContinueResolutionStrategy
	{ $current=$iv_ruleContinueResolutionStrategy.current; }
	EOF;

// Rule ContinueResolutionStrategy
ruleContinueResolutionStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='continue'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getContinueResolutionStrategyAccess().getNameContinueKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getContinueResolutionStrategyRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "continue");
			}
		)
	)
;

// Entry rule entryRuleOperationalDelta
entryRuleOperationalDelta returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationalDeltaRule()); }
	iv_ruleOperationalDelta=ruleOperationalDelta
	{ $current=$iv_ruleOperationalDelta.current; }
	EOF;

// Rule OperationalDelta
ruleOperationalDelta returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationalDeltaAccess().getVariablesVariableParserRuleCall_0_0());
				}
				lv_variables_0_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationalDeltaRule());
					}
					add(
						$current,
						"variables",
						lv_variables_0_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_1='satisfies'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationalDeltaAccess().getSatisfiesKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationalDeltaAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationalDeltaAccess().getRuleSatisfactionRuleParserRuleCall_3_0());
				}
				lv_rule_3_0=ruleSatisfactionRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationalDeltaRule());
					}
					set(
						$current,
						"rule",
						lv_rule_3_0,
						"org.emoflon.ibex.tgg.integrate.Integrate.SatisfactionRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getOperationalDeltaAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
