/**
 * generated by Xtext 2.14.0
 */
package org.emoflon.ibex.tgg.weights.weightDefinition.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.emoflon.ibex.tgg.weights.weightDefinition.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.emoflon.ibex.tgg.weights.weightDefinition.WeightDefinitionPackage
 * @generated
 */
public class WeightDefinitionAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static WeightDefinitionPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WeightDefinitionAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = WeightDefinitionPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WeightDefinitionSwitch<Adapter> modelSwitch =
    new WeightDefinitionSwitch<Adapter>()
    {
      @Override
      public Adapter caseWeightDefinitionFile(WeightDefinitionFile object)
      {
        return createWeightDefinitionFileAdapter();
      }
      @Override
      public Adapter caseImport(Import object)
      {
        return createImportAdapter();
      }
      @Override
      public Adapter caseVariableDeclaration(VariableDeclaration object)
      {
        return createVariableDeclarationAdapter();
      }
      @Override
      public Adapter caseRuleWeightDefinition(RuleWeightDefinition object)
      {
        return createRuleWeightDefinitionAdapter();
      }
      @Override
      public Adapter caseDefaultCalculation(DefaultCalculation object)
      {
        return createDefaultCalculationAdapter();
      }
      @Override
      public Adapter caseHelperFuntion(HelperFuntion object)
      {
        return createHelperFuntionAdapter();
      }
      @Override
      public Adapter caseHelperFuncParameter(HelperFuncParameter object)
      {
        return createHelperFuncParameterAdapter();
      }
      @Override
      public Adapter caseHelperFunction(HelperFunction object)
      {
        return createHelperFunctionAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.emoflon.ibex.tgg.weights.weightDefinition.WeightDefinitionFile <em>File</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.emoflon.ibex.tgg.weights.weightDefinition.WeightDefinitionFile
   * @generated
   */
  public Adapter createWeightDefinitionFileAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.emoflon.ibex.tgg.weights.weightDefinition.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.emoflon.ibex.tgg.weights.weightDefinition.Import
   * @generated
   */
  public Adapter createImportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.emoflon.ibex.tgg.weights.weightDefinition.VariableDeclaration <em>Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.emoflon.ibex.tgg.weights.weightDefinition.VariableDeclaration
   * @generated
   */
  public Adapter createVariableDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.emoflon.ibex.tgg.weights.weightDefinition.RuleWeightDefinition <em>Rule Weight Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.emoflon.ibex.tgg.weights.weightDefinition.RuleWeightDefinition
   * @generated
   */
  public Adapter createRuleWeightDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.emoflon.ibex.tgg.weights.weightDefinition.DefaultCalculation <em>Default Calculation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.emoflon.ibex.tgg.weights.weightDefinition.DefaultCalculation
   * @generated
   */
  public Adapter createDefaultCalculationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.emoflon.ibex.tgg.weights.weightDefinition.HelperFuntion <em>Helper Funtion</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.emoflon.ibex.tgg.weights.weightDefinition.HelperFuntion
   * @generated
   */
  public Adapter createHelperFuntionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.emoflon.ibex.tgg.weights.weightDefinition.HelperFuncParameter <em>Helper Func Parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.emoflon.ibex.tgg.weights.weightDefinition.HelperFuncParameter
   * @generated
   */
  public Adapter createHelperFuncParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.emoflon.ibex.tgg.weights.weightDefinition.HelperFunction <em>Helper Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.emoflon.ibex.tgg.weights.weightDefinition.HelperFunction
   * @generated
   */
  public Adapter createHelperFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //WeightDefinitionAdapterFactory
